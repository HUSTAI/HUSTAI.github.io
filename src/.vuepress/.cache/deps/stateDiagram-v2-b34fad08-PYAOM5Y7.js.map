{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/mermaid@10.2.3/node_modules/mermaid/dist/stateDiagram-v2-b34fad08.js"],
  "sourcesContent": ["import { D as H, a as Q, S as X, b as Z, c as j, p as F, d as M, s as I } from \"./styles-bed8d31d.js\";\nimport { G as tt } from \"./layout-3ecfba7d.js\";\nimport { l, c as g, j as $, x as et, k as st, f as w } from \"./mermaid-8ea29a40.js\";\nimport { r as ot } from \"./index-e1d945fd.js\";\nimport \"./edges-b5d62f50.js\";\nimport \"./createText-f4a1d776.js\";\nimport \"./svgDraw-b2141e90.js\";\nimport \"./line-130fa1e5.js\";\nimport \"./array-2ff2c7a6.js\";\nimport \"./constant-2fe7eae5.js\";\nconst h = \"rect\", C = \"rectWithTitle\", nt = \"start\", ct = \"end\", it = \"divider\", rt = \"roundedWithTitle\", lt = \"note\", at = \"noteGroup\", u = \"statediagram\", dt = \"state\", Et = `${u}-${dt}`, U = \"transition\", St = \"note\", Tt = \"note-edge\", pt = `${U} ${Tt}`, ut = `${u}-${St}`, _t = \"cluster\", ft = `${u}-${_t}`, Dt = \"cluster-alt\", bt = `${u}-${Dt}`, V = \"parent\", Y = \"note\", At = \"state\", N = \"----\", ht = `${N}${Y}`, v = `${N}${V}`, W = \"fill:none\", z = \"fill: #333\", m = \"c\", q = \"text\", K = \"normal\";\nlet y = {}, E = 0;\nconst yt = function(t) {\n  const n = Object.keys(t);\n  for (const e of n)\n    t[e];\n}, gt = function(t, n) {\n  l.trace(\"Extracting classes\"), n.db.clear();\n  try {\n    return n.parser.parse(t), n.db.extract(n.db.getRootDocV2()), n.db.getClasses();\n  } catch (e) {\n    return e;\n  }\n};\nfunction xt(t) {\n  return t == null ? \"\" : t.classes ? t.classes.join(\" \") : \"\";\n}\nfunction R(t = \"\", n = 0, e = \"\", c = N) {\n  const i = e !== null && e.length > 0 ? `${c}${e}` : \"\";\n  return `${At}-${t}${i}-${n}`;\n}\nconst A = (t, n, e, c, i, r) => {\n  const s = e.id, _ = xt(c[s]);\n  if (s !== \"root\") {\n    let T = h;\n    e.start === !0 && (T = nt), e.start === !1 && (T = ct), e.type !== H && (T = e.type), y[s] || (y[s] = {\n      id: s,\n      shape: T,\n      description: w.sanitizeText(s, g()),\n      classes: `${_} ${Et}`\n    });\n    const o = y[s];\n    e.description && (Array.isArray(o.description) ? (o.shape = C, o.description.push(e.description)) : o.description.length > 0 ? (o.shape = C, o.description === s ? o.description = [e.description] : o.description = [o.description, e.description]) : (o.shape = h, o.description = e.description), o.description = w.sanitizeTextOrArray(o.description, g())), o.description.length === 1 && o.shape === C && (o.shape = h), !o.type && e.doc && (l.info(\"Setting cluster for \", s, G(e)), o.type = \"group\", o.dir = G(e), o.shape = e.type === Q ? it : rt, o.classes = o.classes + \" \" + ft + \" \" + (r ? bt : \"\"));\n    const p = {\n      labelStyle: \"\",\n      shape: o.shape,\n      labelText: o.description,\n      // typeof newNode.description === 'object'\n      //   ? newNode.description[0]\n      //   : newNode.description,\n      classes: o.classes,\n      style: \"\",\n      //styles.style,\n      id: s,\n      dir: o.dir,\n      domId: R(s, E),\n      type: o.type,\n      padding: 15\n      //getConfig().flowchart.padding\n    };\n    if (p.centerLabel = !0, e.note) {\n      const a = {\n        labelStyle: \"\",\n        shape: lt,\n        labelText: e.note.text,\n        classes: ut,\n        // useHtmlLabels: false,\n        style: \"\",\n        // styles.style,\n        id: s + ht + \"-\" + E,\n        domId: R(s, E, Y),\n        type: o.type,\n        padding: 15\n        //getConfig().flowchart.padding\n      }, d = {\n        labelStyle: \"\",\n        shape: at,\n        labelText: e.note.text,\n        classes: o.classes,\n        style: \"\",\n        // styles.style,\n        id: s + v,\n        domId: R(s, E, V),\n        type: \"group\",\n        padding: 0\n        //getConfig().flowchart.padding\n      };\n      E++;\n      const f = s + v;\n      t.setNode(f, d), t.setNode(a.id, a), t.setNode(s, p), t.setParent(s, f), t.setParent(a.id, f);\n      let S = s, D = a.id;\n      e.note.position === \"left of\" && (S = a.id, D = s), t.setEdge(S, D, {\n        arrowhead: \"none\",\n        arrowType: \"\",\n        style: W,\n        labelStyle: \"\",\n        classes: pt,\n        arrowheadStyle: z,\n        labelpos: m,\n        labelType: q,\n        thickness: K\n      });\n    } else\n      t.setNode(s, p);\n  }\n  n && n.id !== \"root\" && (l.trace(\"Setting node \", s, \" to be child of its parent \", n.id), t.setParent(s, n.id)), e.doc && (l.trace(\"Adding nodes children \"), $t(t, e, e.doc, c, i, !r));\n}, $t = (t, n, e, c, i, r) => {\n  l.trace(\"items\", e), e.forEach((s) => {\n    switch (s.stmt) {\n      case Z:\n        A(t, n, s, c, i, r);\n        break;\n      case H:\n        A(t, n, s, c, i, r);\n        break;\n      case X:\n        {\n          A(t, n, s.state1, c, i, r), A(t, n, s.state2, c, i, r);\n          const _ = {\n            id: \"edge\" + E,\n            arrowhead: \"normal\",\n            arrowTypeEnd: \"arrow_barb\",\n            style: W,\n            labelStyle: \"\",\n            label: w.sanitizeText(s.description, g()),\n            arrowheadStyle: z,\n            labelpos: m,\n            labelType: q,\n            thickness: K,\n            classes: U\n          };\n          t.setEdge(s.state1.id, s.state2.id, _, E), E++;\n        }\n        break;\n    }\n  });\n}, G = (t, n = j) => {\n  let e = n;\n  if (t.doc)\n    for (let c = 0; c < t.doc.length; c++) {\n      const i = t.doc[c];\n      i.stmt === \"dir\" && (e = i.value);\n    }\n  return e;\n}, Ct = async function(t, n, e, c) {\n  l.info(\"Drawing state diagram (v2)\", n), y = {}, c.db.getDirection();\n  const { securityLevel: i, state: r } = g(), s = r.nodeSpacing || 50, _ = r.rankSpacing || 50;\n  l.info(c.db.getRootDocV2()), c.db.extract(c.db.getRootDocV2()), l.info(c.db.getRootDocV2());\n  const T = c.db.getStates(), o = new tt({\n    multigraph: !0,\n    compound: !0\n  }).setGraph({\n    rankdir: G(c.db.getRootDocV2()),\n    nodesep: s,\n    ranksep: _,\n    marginx: 8,\n    marginy: 8\n  }).setDefaultEdgeLabel(function() {\n    return {};\n  });\n  A(o, void 0, c.db.getRootDocV2(), T, c.db, !0);\n  let p;\n  i === \"sandbox\" && (p = $(\"#i\" + n));\n  const a = i === \"sandbox\" ? $(p.nodes()[0].contentDocument.body) : $(\"body\"), d = a.select(`[id=\"${n}\"]`), f = a.select(\"#\" + n + \" g\");\n  await ot(f, o, [\"barb\"], u, n);\n  const S = 8;\n  et.insertTitle(d, \"statediagramTitleText\", r.titleTopMargin, c.db.getDiagramTitle());\n  const D = d.node().getBBox(), L = D.width + S * 2, P = D.height + S * 2;\n  d.attr(\"class\", u);\n  const k = d.node().getBBox();\n  st(d, P, L, r.useMaxWidth);\n  const O = `${k.x - S} ${k.y - S} ${L} ${P}`;\n  l.debug(`viewBox ${O}`), d.attr(\"viewBox\", O);\n  const J = document.querySelectorAll('[id=\"' + n + '\"] .edgeLabel .label');\n  for (const x of J) {\n    const B = x.getBBox(), b = document.createElementNS(\"http://www.w3.org/2000/svg\", h);\n    b.setAttribute(\"rx\", 0), b.setAttribute(\"ry\", 0), b.setAttribute(\"width\", B.width), b.setAttribute(\"height\", B.height), x.insertBefore(b, x.firstChild);\n  }\n}, Rt = {\n  setConf: yt,\n  getClasses: gt,\n  draw: Ct\n}, Ht = {\n  parser: F,\n  db: M,\n  renderer: Rt,\n  styles: I,\n  init: (t) => {\n    t.state || (t.state = {}), t.state.arrowMarkerAbsolute = t.arrowMarkerAbsolute, M.clear();\n  }\n};\nexport {\n  Ht as diagram\n};\n"],
  "mappings": "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",
  "names": ["Tt", "At", "gt", "xt", "A", "S", "Rt"]
}
