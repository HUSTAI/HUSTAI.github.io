{"version":3,"file":"SidebarGroup.js","sourceRoot":"","sources":["../../../../../src/client/modules/sidebar/components/SidebarGroup.ts"],"names":[],"mappings":"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","sourcesContent":["import type { PropType, VNode } from \"vue\";\nimport { computed, defineComponent, h } from \"vue\";\nimport { useRoute } from \"vue-router\";\n\nimport AutoLink from \"@theme-hope/components/AutoLink\";\nimport HopeIcon from \"@theme-hope/components/HopeIcon\";\nimport SidebarLinks from \"@theme-hope/modules/sidebar/components/SidebarLinks\";\nimport { isActiveSidebarItem } from \"@theme-hope/modules/sidebar/utils/index\";\n\nimport type { ResolvedSidebarGroupItem } from \"../utils/index.js\";\n\nimport \"../styles/sidebar-group.scss\";\n\nexport default defineComponent({\n  name: \"SidebarGroup\",\n\n  props: {\n    /**\n     * Sidebar group item config\n     *\n     * 侧边栏分组配置\n     */\n    config: {\n      type: Object as PropType<ResolvedSidebarGroupItem>,\n      required: true,\n    },\n\n    /**\n     * Whether current group is open\n     *\n     * 当前分组是否展开\n     */\n    open: {\n      type: Boolean,\n      required: true,\n    },\n  },\n\n  emits: [\"toggle\"],\n\n  setup(props, { emit }) {\n    const route = useRoute();\n    const active = computed(() => isActiveSidebarItem(route, props.config));\n\n    const exact = computed(() =>\n      isActiveSidebarItem(route, props.config, true)\n    );\n\n    return (): VNode => {\n      const {\n        collapsible,\n        children = [],\n        icon,\n        prefix,\n        link,\n        text,\n      } = props.config;\n\n      return h(\"section\", { class: \"vp-sidebar-group\" }, [\n        h(\n          collapsible ? \"button\" : \"p\",\n          {\n            class: [\n              \"vp-sidebar-heading\",\n              {\n                clickable: collapsible || link,\n                exact: exact.value,\n                active: active.value,\n              },\n            ],\n            ...(collapsible\n              ? {\n                  type: \"button\",\n                  onClick: () => emit(\"toggle\"),\n                  onKeydown: (event: KeyboardEvent): void => {\n                    if (event.key === \"Enter\") emit(\"toggle\");\n                  },\n                }\n              : {}),\n          },\n          [\n            // icon\n            h(HopeIcon, { icon }),\n            // title\n            link\n              ? h(AutoLink, {\n                  class: \"vp-sidebar-title\",\n                  config: { text, link },\n                  noExternalLinkIcon: true,\n                })\n              : h(\"span\", { class: \"vp-sidebar-title\" }, text),\n            // arrow\n            collapsible\n              ? h(\"span\", { class: [\"vp-arrow\", props.open ? \"down\" : \"end\"] })\n              : null,\n          ]\n        ),\n\n        props.open || !collapsible\n          ? h(SidebarLinks, { key: prefix, config: children })\n          : null,\n      ]);\n    };\n  },\n});\n"]}