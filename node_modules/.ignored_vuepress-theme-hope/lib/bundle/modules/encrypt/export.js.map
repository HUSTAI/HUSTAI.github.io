{"version":3,"file":"export.js","sources":["../../../../src/client/modules/encrypt/components/icons.ts","../../../../src/client/modules/encrypt/components/PasswordModal.ts","../../../../src/client/modules/encrypt/composables/utils.ts","../../../../src/client/modules/encrypt/composables/global.ts","../../../../src/client/modules/encrypt/utils/checkToken.ts","../../../../src/client/modules/encrypt/composables/path.ts","../../../../src/client/modules/encrypt/components/GlobalEncrypt.ts","../../../../src/client/modules/encrypt/components/LocalEncrypt.ts"],"sourcesContent":["import type { FunctionalComponent } from \"vue\";\nimport { h } from \"vue\";\nimport { IconBase } from \"vuepress-shared/client\";\n\nexport const LockIcon: FunctionalComponent = () =>\n  h(IconBase, { name: \"lock\" }, () =>\n    h(\"path\", {\n      d: \"M787.168 952.268H236.832c-30.395 0-55.033-24.638-55.033-55.033V429.45c0-30.395 24.638-55.034 55.033-55.034h82.55V264.35c0-106.38 86.238-192.618 192.618-192.618S704.618 157.97 704.618 264.35v110.066h82.55c30.395 0 55.033 24.639 55.033 55.034v467.785c0 30.395-24.639 55.033-55.033 55.033zM484.483 672.046v115.122h55.034V672.046c31.99-11.373 55.033-41.605 55.033-77.496 0-45.592-36.958-82.55-82.55-82.55s-82.55 36.958-82.55 82.55c0 35.89 23.042 66.123 55.033 77.496zM622.067 264.35c0-60.788-49.28-110.067-110.067-110.067s-110.067 49.28-110.067 110.067v110.066h220.135V264.35z\",\n    })\n  );\n\nLockIcon.displayName = \"LockIcon\";\n","import { usePageFrontmatter } from \"@vuepress/client\";\nimport type { VNode } from \"vue\";\nimport { computed, defineComponent, h, nextTick, ref } from \"vue\";\n\nimport { useThemeLocaleData } from \"@theme-hope/composables/index\";\n\nimport { LockIcon } from \"./icons.js\";\n\nimport \"../styles/password-modal.scss\";\n\nexport default defineComponent({\n  name: \"PasswordModal\",\n\n  props: {\n    /**\n     * Whether is fullscreen\n     *\n     * 是否是全屏\n     */\n    full: Boolean,\n  },\n\n  emits: [\"verify\"],\n\n  setup(props, { emit }) {\n    const frontmatter = usePageFrontmatter();\n    const themeLocale = useThemeLocaleData();\n    const password = ref(\"\");\n    const hasTried = ref(false);\n    const remember = ref(false);\n\n    const locale = computed(() => themeLocale.value.encryptLocales);\n\n    let hintHandler: number | null = null;\n\n    const verify = (): void => {\n      // clear previous handler\n      if (hintHandler) clearTimeout(hintHandler);\n      hasTried.value = false;\n\n      emit(\"verify\", password.value, remember.value);\n\n      void nextTick().then(() => {\n        hasTried.value = true;\n\n        hintHandler = setTimeout(() => {\n          hasTried.value = false;\n        }, 1000) as unknown as number;\n      });\n    };\n\n    return (): VNode =>\n      h(\n        \"div\",\n        {\n          class: [\n            \"vp-decrypt-layer\",\n            { expand: props.full || frontmatter.value[\"home\"] },\n          ],\n        },\n        h(\"div\", { class: \"vp-decrypt-modal\" }, [\n          h(\n            \"div\",\n            { class: [\"vp-decrypt-hint\", { tried: hasTried.value }] },\n            hasTried.value\n              ? locale.value.errorHint\n              : h(LockIcon, { \"aria-label\": locale.value.iconLabel })\n          ),\n          h(\"div\", { class: \"vp-decrypt-input\" }, [\n            h(\"input\", {\n              type: \"password\",\n              value: password.value,\n              placeholder: locale.value.placeholder,\n              onInput: ({ target }: InputEvent) => {\n                password.value = (<HTMLInputElement>target).value;\n              },\n              onKeydown: ({ key }: KeyboardEvent) => {\n                if (key === \"Enter\") verify();\n              },\n            }),\n          ]),\n          h(\"div\", { class: \"vp-remember-password\" }, [\n            h(\"input\", {\n              type: \"checkbox\",\n              value: remember.value,\n              onChange: () => (remember.value = !remember.value),\n            }),\n            locale.value.remember,\n          ]),\n          h(\n            \"button\",\n            {\n              type: \"button\",\n              class: \"vp-decrypt-submit\",\n              onClick: () => verify(),\n            },\n            \"OK\"\n          ),\n        ])\n      );\n  },\n});\n","import type { ComputedRef } from \"vue\";\nimport { computed } from \"vue\";\n\nimport { useThemeData } from \"@theme-hope/composables/index\";\n\nimport type { EncryptConfig } from \"../../../../shared/index.js\";\n\nexport const useEncryptData = (): ComputedRef<EncryptConfig> => {\n  const themeData = useThemeData();\n\n  return computed(() => themeData.value.encrypt || {});\n};\n","import { useSessionStorage, useStorage } from \"@vueuse/core\";\nimport { compareSync } from \"bcrypt-ts/browser\";\nimport type { ComputedRef } from \"vue\";\nimport { computed } from \"vue\";\n\nimport { useEncryptData } from \"./utils.js\";\n\nconst STORAGE_KEY = \"VUEPRESS_HOPE_GLOBAL_TOKEN\";\n\nexport interface GlobalEncrypt {\n  isEncrypted: ComputedRef<boolean>;\n  isDecrypted: ComputedRef<boolean>;\n  validate: (token: string, keep?: boolean) => void;\n}\n\nexport const useGlobalEncrypt = (): GlobalEncrypt => {\n  const encryptData = useEncryptData();\n\n  const localToken = useStorage(STORAGE_KEY, \"\");\n  const sessionToken = useSessionStorage(STORAGE_KEY, \"\");\n\n  // is globally encrypted\n  const isEncrypted = computed(() => {\n    const { global = false, admin = [] } = encryptData.value;\n\n    return global && admin.length > 0;\n  });\n\n  // valid token exists\n  const isDecrypted = computed(() => {\n    if (isEncrypted.value) {\n      if (localToken.value)\n        // none of the token matches\n        return encryptData.value.admin!.some((hash) =>\n          compareSync(localToken.value, hash)\n        );\n\n      if (sessionToken.value)\n        // none of the token matches\n        return encryptData.value.admin!.some((hash) =>\n          compareSync(sessionToken.value, hash)\n        );\n    }\n\n    return false;\n  });\n\n  const validate = (inputToken: string, keep = false): void => {\n    (keep ? localToken : sessionToken).value = inputToken;\n  };\n\n  return {\n    isEncrypted,\n    isDecrypted,\n    validate,\n  };\n};\n","import { compareSync } from \"bcrypt-ts/browser\";\n\nexport const checkToken = (token = \"\", hash: string): boolean =>\n  Boolean(token) && compareSync(token, hash);\n","import { usePageData } from \"@vuepress/client\";\nimport { isPlainObject } from \"@vuepress/shared\";\nimport { useSessionStorage, useStorage } from \"@vueuse/core\";\nimport type { ComputedRef } from \"vue\";\nimport { computed } from \"vue\";\nimport { keys, startsWith } from \"vuepress-shared/client\";\n\nimport { checkToken } from \"@theme-hope/modules/encrypt/utils/index\";\n\nimport { useEncryptData } from \"./utils.js\";\n\nconst STORAGE_KEY = \"VUEPRESS_HOPE_PATH_TOKEN\";\n\nexport interface EncryptStatus {\n  isEncrypted: boolean;\n  isDecrypted: boolean;\n}\n\nexport interface PathEncrypt {\n  status: ComputedRef<EncryptStatus>;\n  getStatus: (path: string) => EncryptStatus;\n  validate: (token: string, keep?: boolean) => void;\n}\n\nexport const usePathEncrypt = (): PathEncrypt => {\n  const page = usePageData();\n  const encryptData = useEncryptData();\n\n  const localToken = useStorage<Record<string, string>>(STORAGE_KEY, {});\n  const sessionToken = useSessionStorage<Record<string, string>>(\n    STORAGE_KEY,\n    {}\n  );\n\n  const getPathMatchedKeys = (path: string): string[] =>\n    isPlainObject(encryptData.value.config)\n      ? keys(encryptData.value.config)\n          .filter((key) => startsWith(decodeURI(path), key))\n          .sort((a, b) => b.length - a.length)\n      : [];\n\n  const getStatus = (path: string): EncryptStatus => {\n    const matchedKeys = getPathMatchedKeys(path);\n\n    if (matchedKeys.length > 0) {\n      const { config = {} } = encryptData.value;\n\n      return {\n        isEncrypted: true,\n        isDecrypted: matchedKeys.some(\n          (key) =>\n            (localToken.value[key] &&\n              config[key].some((token) =>\n                checkToken(localToken.value[key], token)\n              )) ||\n            (sessionToken.value[key] &&\n              config[key].some((token) =>\n                checkToken(sessionToken.value[key], token)\n              ))\n        ),\n      };\n    }\n\n    return {\n      isDecrypted: false,\n      isEncrypted: false,\n    };\n  };\n\n  const status = computed(() => getStatus(page.value.path));\n\n  const validate = (inputToken: string, keep = false): void => {\n    const { config = {} } = encryptData.value;\n    const matchedKeys = getPathMatchedKeys(page.value.path);\n\n    // some of the tokens matches\n    for (const hitKey of matchedKeys)\n      if (config[hitKey].filter((token) => checkToken(inputToken, token))) {\n        (keep ? localToken : sessionToken).value[hitKey] = inputToken;\n\n        break;\n      }\n  };\n\n  return {\n    status,\n    getStatus,\n    validate,\n  };\n};\n","import type { SlotsType, VNode } from \"vue\";\nimport { defineComponent, h, onMounted, ref } from \"vue\";\n\nimport FadeSlideY from \"@theme-hope/components/transitions/FadeSlideY\";\nimport PasswordModal from \"@theme-hope/modules/encrypt/components/PasswordModal\";\nimport { useGlobalEncrypt } from \"@theme-hope/modules/encrypt/composables/index\";\n\nexport default defineComponent({\n  name: \"GlobalEncrypt\",\n\n  slots: Object as SlotsType<{\n    default: () => VNode | VNode[];\n  }>,\n\n  setup(_props, { slots }) {\n    const { isDecrypted, isEncrypted, validate } = useGlobalEncrypt();\n\n    const isMounted = ref(false);\n\n    onMounted(() => {\n      isMounted.value = true;\n    });\n\n    return (): VNode =>\n      h(FadeSlideY, () =>\n        isEncrypted.value\n          ? isMounted.value\n            ? isDecrypted.value\n              ? slots.default()\n              : h(PasswordModal, { full: true, onVerify: validate })\n            : null\n          : slots.default()\n      );\n  },\n});\n","import type { SlotsType, VNode } from \"vue\";\nimport { defineComponent, h, onMounted, ref } from \"vue\";\n\nimport PasswordModal from \"@theme-hope/modules/encrypt/components/PasswordModal\";\nimport { usePathEncrypt } from \"@theme-hope/modules/encrypt/composables/index\";\n\nexport default defineComponent({\n  name: \"LocalEncrypt\",\n\n  slots: Object as SlotsType<{\n    default: () => VNode | VNode[];\n  }>,\n\n  setup(_props, { slots }) {\n    const { status, validate } = usePathEncrypt();\n\n    const isMounted = ref(false);\n\n    onMounted(() => {\n      isMounted.value = true;\n    });\n\n    return (): VNode[] | VNode | null => {\n      const { isEncrypted, isDecrypted } = status.value;\n\n      return isEncrypted\n        ? isMounted.value\n          ? isDecrypted\n            ? slots.default() || null\n            : h(PasswordModal, { full: true, onVerify: validate })\n          : null\n        : slots.default() || null;\n    };\n  },\n});\n"],"names":["LockIcon","h","IconBase","defineComponent","props","emit","frontmatter","usePageFrontmatter","themeLocale","useThemeLocaleData","password","ref","hasTried","remember","locale","computed","hintHandler","verify","nextTick","target","key","useEncryptData","themeData","useThemeData","STORAGE_KEY","useGlobalEncrypt","encryptData","localToken","useStorage","sessionToken","useSessionStorage","isEncrypted","global","admin","isDecrypted","hash","compareSync","inputToken","keep","checkToken","token","usePathEncrypt","page","usePageData","getPathMatchedKeys","path","isPlainObject","keys","startsWith","a","b","getStatus","matchedKeys","config","hitKey","_props","slots","validate","isMounted","onMounted","FadeSlideY","PasswordModal","status"],"mappings":"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"}