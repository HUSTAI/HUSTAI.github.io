{"version":3,"file":"usePWAEvent-f118b552.js","sources":["../../src/client/composables/usePWAEvent.ts"],"sourcesContent":["import type { Emitter } from \"mitt\";\nimport type { InjectionKey } from \"vue\";\nimport { inject } from \"vue\";\n\ndeclare const __VUEPRESS_DEV__: boolean;\n\nexport type PWAEvent = Emitter<{\n  ready: ServiceWorkerRegistration;\n  registered: ServiceWorkerRegistration;\n  cached: ServiceWorkerRegistration;\n  updatefound: ServiceWorkerRegistration;\n  updated: ServiceWorkerRegistration;\n  offline: void;\n  error: Error;\n}>;\n\nexport const pwaEventSymbol: InjectionKey<PWAEvent> = Symbol(\n  __VUEPRESS_DEV__ ? \"PWAEvent\" : \"\"\n);\n\nexport const usePWAEvent = (): PWAEvent => {\n  const pwaEvent = inject(pwaEventSymbol);\n\n  if (!pwaEvent) throw new Error(\"usePWAEvent() is called without provider.\");\n\n  return pwaEvent;\n};\n"],"names":["pwaEventSymbol","usePWAEvent","pwaEvent","inject"],"mappings":"6BAgBa,MAAAA,EAAyC,OACpD,iBAAmB,WAAa,EAClC,EAEaC,EAAc,IAAgB,CACzC,MAAMC,EAAWC,EAAOH,CAAc,EAEtC,GAAI,CAACE,EAAU,MAAM,IAAI,MAAM,2CAA2C,EAE1E,OAAOA,CACT"}