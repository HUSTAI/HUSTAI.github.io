{"version":3,"file":"SWUpdatePopup.js","sources":["../../../src/client/components/SWUpdatePopup.ts"],"sourcesContent":["import type { SlotsType, VNode } from \"vue\";\nimport {\n  Transition,\n  computed,\n  defineComponent,\n  h,\n  onMounted,\n  shallowRef,\n} from \"vue\";\nimport { useLocaleConfig } from \"vuepress-shared/client\";\n\nimport { UpdateIcon } from \"../components/icons.js\";\nimport { usePWAEvent } from \"../composables/index.js\";\nimport { locales } from \"../define.js\";\nimport { skipWaiting } from \"../utils/index.js\";\n\nimport \"../styles/popup.scss\";\n\nexport default defineComponent({\n  name: \"SWUpdatePopup\",\n\n  slots: Object as SlotsType<{\n    default?: (props: {\n      enabled: boolean;\n      reload: () => void;\n    }) => VNode[] | VNode;\n  }>,\n\n  setup(_props, { slots }) {\n    const locale = useLocaleConfig(locales);\n    const registration = shallowRef<ServiceWorkerRegistration>();\n\n    const enabled = computed(() => Boolean(registration.value));\n\n    const reload = (): void => {\n      if (registration.value) {\n        skipWaiting(registration.value);\n        registration.value = undefined;\n      }\n    };\n\n    onMounted(() => {\n      const event = usePWAEvent();\n\n      event.on(\"updated\", (reg) => {\n        if (reg) registration.value = reg;\n      });\n    });\n\n    return (): VNode =>\n      h(\n        Transition,\n        { name: \"popup\" },\n        () =>\n          slots.default?.({\n            enabled: enabled.value,\n            reload,\n          }) ||\n          (enabled.value\n            ? h(\n                \"button\",\n                {\n                  type: \"button\",\n                  class: \"sw-update-popup\",\n                  tabindex: 0,\n                  onClick: () => reload(),\n                },\n                [\n                  locale.value.update,\n                  h(\"span\", { class: \"icon-wrapper\" }, h(UpdateIcon)),\n                ]\n              )\n            : null)\n      );\n  },\n});\n"],"names":["defineComponent","_props","slots","locale","useLocaleConfig","locales","registration","shallowRef","enabled","computed","reload","skipWaiting","onMounted","usePWAEvent","reg","h","Transition","_a","UpdateIcon"],"mappings":"+UAkBA,IAAeA,EAAAA,EAAgB,CAC7B,KAAM,gBAEN,MAAO,OAOP,MAAMC,EAAQ,CAAE,MAAAC,CAAM,EAAG,CACvB,MAAMC,EAASC,EAAgBC,CAAO,EAChCC,EAAeC,EAEfC,EAAAA,EAAUC,EAAS,IAAM,EAAQH,EAAa,KAAM,EAEpDI,EAAS,IAAY,CACrBJ,EAAa,QACfK,EAAYL,EAAa,KAAK,EAC9BA,EAAa,MAAQ,OAEzB,EAEA,OAAAM,EAAU,IAAM,CACAC,EAAY,EAEpB,GAAG,UAAYC,GAAQ,CACvBA,IAAKR,EAAa,MAAQQ,EAChC,CAAC,CACH,CAAC,EAEM,IACLC,EACEC,EACA,CAAE,KAAM,OAAQ,EAChB,IAAG,CArDX,IAAAC,EAsDU,QAAAA,EAAAf,EAAM,UAAN,YAAAe,EAAA,KAAAf,EAAgB,CACd,QAASM,EAAQ,MACjB,OAAAE,CACF,MACCF,EAAQ,MACLO,EACE,SACA,CACE,KAAM,SACN,MAAO,kBACP,SAAU,EACV,QAAS,IAAML,EACjB,CAAA,EACA,CACEP,EAAO,MAAM,OACbY,EAAE,OAAQ,CAAE,MAAO,cAAe,EAAGA,EAAEG,CAAU,CAAC,CACpD,CACF,EACA,KACR,CAAA,CACJ,CACF,CAAC"}