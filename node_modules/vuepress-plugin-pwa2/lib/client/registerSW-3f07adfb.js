const t=()=>{navigator.serviceWorker.getRegistration().then(a=>{a&&a.active&&(a==null||a.addEventListener("updatefound",()=>{window.location.reload(!0)}))})},c=async(a,o={},l=!0)=>{const{register:n}=await import("register-service-worker");n(a,{ready(e){var r;l&&console.info("[Service Worker]: active"),(r=o.ready)==null||r.call(o,e)},registered(e){var r;l&&console.log("[Service Worker]: registered"),(r=o.registered)==null||r.call(o,e)},cached(e){var r;l&&console.log("[Service Worker]: cached"),(r=o.cached)==null||r.call(o,e)},async updatefound(e){var r;await navigator.serviceWorker.getRegistration()&&(l&&console.log("[Service Worker]: update found"),(r=o.updatefound)==null||r.call(o,e))},updated(e){var r;l&&console.log("[Service Worker]: updated"),(r=o.updated)==null||r.call(o,e)},offline(){var e;l&&console.log("[Service Worker]: offline"),(e=o.offline)==null||e.call(o)},error(e){var r;l&&console.error("[Service Worker]: ",e),(r=o.error)==null||r.call(o,e)}})};export{t as f,c as r};
//# sourceMappingURL=registerSW-3f07adfb.js.map
