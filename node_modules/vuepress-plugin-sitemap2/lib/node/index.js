import{getDirname as P,path as U,colors as S,fs as $}from"@vuepress/utils";import{ensureEndingSlash as D,Logger as G,isLinkHttp as M,removeEndingSlash as E,removeLeadingSlash as O,checkVersion as N}from"vuepress-shared/node";import{SitemapStream as k}from"sitemap";const q=P(import.meta.url),A=D(U.resolve(q,"../../templates")),L="vuepress-plugin-sitemap2",d=new G(L),F=({options:e,deprecatedOption:t,newOption:i,msg:r="",scope:l=""})=>{if(t in e){if(d.warn(`${S.magenta(t)} is ${S.yellow("deprecated")}${l?` in ${l}`:""}, please use "${S.magenta(i)}" instead.${r?`
${r}`:""}`),i.includes(".")){const u=i.split(".");let s=e;u.forEach((c,h)=>{h!==u.length-1?(s[c]=s[c]||{},s=s[c]):s[c]=e[t]})}else e[i]=e[t];delete e[t]}},X=e=>{F({options:e,deprecatedOption:"urls",newOption:"extraUrls"}),F({options:e,deprecatedOption:"exclude",newOption:"excludeUrls"}),F({options:e,deprecatedOption:"outFile",newOption:"sitemapFilename"}),F({options:e,deprecatedOption:"dateFormatter",newOption:"modifyTimeGetter"})},T=[],b=({path:e,pathLocale:t})=>({defaultPath:e.replace(t,"/"),pathLocale:t}),I=(e,t)=>{const{changefreq:i="daily",excludeUrls:r=["/404.html"],modifyTimeGetter:l=n=>{var o;return(o=n.data.git)!=null&&o.updatedTime?new Date(n.data.git.updatedTime).toISOString():""}}=t,{options:{base:u,locales:s},pages:c}=e,h=c.reduce((n,o)=>{const{defaultPath:p,pathLocale:w}=b(o),m=n.get(p)||[];return m.push(w),n.set(p,m)},new Map),f=new Map;return c.forEach(n=>{const o=n.frontmatter.sitemap;if(o===!1)return;const p=(n.frontmatter.head||[]).find(a=>a[1].name==="robots");if(((p==null?void 0:p[1].content)||"").split(/,/u).map(a=>a.trim()).includes("noindex")||r.includes(n.path))return;const w=l(n),{defaultPath:m}=b(n),x=h.get(m)||[];let y=[];x.length>1&&(e.env.isDebug&&x.forEach(a=>{!s[a].lang&&!T.includes(a)&&(d.warn(`"lang" option for ${a} is missing`),T.push(a))}),y=x.map(a=>{var v;return{lang:((v=s[a])==null?void 0:v.lang)||"en",url:`${u}${O(m.replace(/^\//u,a))}`}}));const g={...i?{changefreq:i}:{},links:y,...w?{lastmod:w}:{},...o};e.env.isDebug&&d.info(`sitemap option for ${n.path}: ${JSON.stringify(g,null,2)}`),f.set(n.path,g)}),f},_=async(e,t)=>{const{extraUrls:i=[],xmlNameSpace:r}=t,l=M(t.hostname)?E(t.hostname):`https://${E(t.hostname)}`,u=t.sitemapFilename?O(t.sitemapFilename):"sitemap.xml",s=t.sitemapXSLFilename?O(t.sitemapXSLFilename):"sitemap.xsl",c=t.sitemapXSLTemplate??`${A}sitemap.xsl`,{dir:h,options:{base:f}}=e;d.load(`Generating sitemap to ${S.cyan(`/${u}`)}`),await new Promise(o=>{const p=new k({hostname:l,...r?{xmlns:r}:{}}),w=I(e,t),m=h.dest(u),x=h.dest(s),y=$.createWriteStream(m);p.pipe(y),w.forEach((g,a)=>p.write({url:`${f}${O(a)}`,...g})),y.on("finish",()=>{const g=$.readFileSync(m,{encoding:"utf-8"});$.writeFileSync(m,g.replace('<?xml version="1.0" encoding="UTF-8"?>',`<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="${f}${s}"?>
`)),$.copySync(c,x),o()}),i.forEach(g=>p.write({url:`${f}${O(g)}`})),p.end()}),d.succeed();const n=h.dest("robots.txt");if($.existsSync(n)){d.load(`Appended sitemap path to ${S.cyan("robots.txt")}`);const o=`${(await $.readFile(n,{encoding:"utf8"})).replace(/^Sitemap: .*$/u,"")}
Sitemap: ${l}${f}${u}
`;await $.writeFile(n,o,{flag:"w"}),d.succeed()}},H=(e,t=!0)=>i=>{t&&X(e),N(i,L,"2.0.0-beta.63"),i.env.isDebug&&d.info("Options:",e);const r={name:L};return e.hostname?{...r,onGenerated:l=>_(l,e)}:(d.error(`Option ${S.magenta("hostname")} is required!`),r)};export{H as sitemapPlugin};
//# sourceMappingURL=index.js.map
