{"version":3,"file":"darkmode.js","sourceRoot":"","sources":["../../../../../src/client/modules/outlook/composables/darkmode.ts"],"names":[],"mappings":"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","sourcesContent":["import { usePreferredDark, useStorage } from \"@vueuse/core\";\nimport type { App, ComputedRef, InjectionKey, Ref } from \"vue\";\nimport { computed, inject, onMounted, watch } from \"vue\";\n\nimport { useThemeData } from \"@theme-hope/composables/index\";\n\nimport type { DarkmodeOptions } from \"../../../../shared/index.js\";\n\ndeclare const __VUEPRESS_DEV__: boolean;\n\nexport type DarkmodeStatus = \"light\" | \"dark\" | \"auto\";\n\nexport type DarkModeRef = ComputedRef<boolean>;\n\nexport type DarkModeStatusRef = Ref<DarkmodeStatus>;\n\nexport interface DarkMode {\n  isDarkmode: DarkModeRef;\n  config: ComputedRef<DarkmodeOptions>;\n  status: DarkModeStatusRef;\n  canToggle: ComputedRef<boolean>;\n}\n\nexport const darkModeSymbol: InjectionKey<DarkMode> = Symbol(\n  __VUEPRESS_DEV__ ? \"darkMode\" : \"\"\n);\n\n/**\n * Inject dark mode global computed\n */\nexport const useDarkmode = (): DarkMode => {\n  const darkmode = inject(darkModeSymbol);\n\n  if (!darkmode) throw new Error(\"useDarkmode() is called without provider.\");\n\n  return darkmode;\n};\n\nexport const injectDarkmode = (app: App): void => {\n  const themeData = useThemeData();\n  const isDarkPreferred = usePreferredDark();\n  const status = useStorage<DarkmodeStatus>(\n    \"vuepress-theme-hope-scheme\",\n    \"auto\"\n  );\n\n  const config = computed(() => themeData.value.darkmode || \"switch\");\n\n  const isDarkmode = computed(() => {\n    const darkmode = config.value;\n\n    // disable darkmode\n    return darkmode === \"disable\"\n      ? false\n      : // force darkmode\n      darkmode === \"enable\"\n      ? true\n      : // auto\n      darkmode === \"auto\"\n      ? isDarkPreferred.value\n      : // toggle\n      darkmode === \"toggle\"\n      ? status.value === \"dark\"\n      : // switch\n        status.value === \"dark\" ||\n        (status.value === \"auto\" && isDarkPreferred.value);\n  });\n\n  const canToggle = computed(() => {\n    const darkmode = config.value;\n\n    return darkmode === \"switch\" || darkmode === \"toggle\";\n  });\n\n  app.provide(darkModeSymbol, {\n    canToggle,\n    config,\n    isDarkmode,\n    status,\n  });\n\n  // provide global helpers\n  Object.defineProperties(app.config.globalProperties, {\n    $isDarkmode: { get: () => isDarkmode.value },\n  });\n};\n\nexport const setupDarkmode = (): void => {\n  const { isDarkmode } = useDarkmode();\n\n  const updateDOM = (isDark = isDarkmode.value): void =>\n    document.documentElement.setAttribute(\n      \"data-theme\",\n      isDark ? \"dark\" : \"light\"\n    );\n\n  onMounted(() => {\n    watch(isDarkmode, updateDOM, { immediate: true });\n  });\n};\n\ndeclare module \"vue\" {\n  export interface ComponentCustomProperties {\n    $isDarkmode: boolean;\n  }\n}\n"]}