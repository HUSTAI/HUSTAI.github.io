{"version":3,"file":"setup.js","sourceRoot":"","sources":["../../../../../src/client/modules/sidebar/composables/setup.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,MAAM,kBAAkB,CAAC;AAEtD,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,KAAK,CAAC;AAEhD,OAAO,EAAE,kBAAkB,EAAE,MAAM,+BAA+B,CAAC;AAEnE,OAAO,EAAE,mBAAmB,EAAE,MAAM,oBAAoB,CAAC;AAQzD,MAAM,CAAC,MAAM,kBAAkB,GAAkC,MAAM,CACrE,gBAAgB,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CACvC,CAAC;AAEF;;GAEG;AACH,MAAM,CAAC,MAAM,iBAAiB,GAAG,GAAS,EAAE;IAC1C,MAAM,WAAW,GAAG,kBAAkB,EAA8B,CAAC;IACrE,MAAM,WAAW,GAAG,kBAAkB,EAAE,CAAC;IAEzC,oDAAoD;IACpD,MAAM,aAAa,GAAG,QAAQ,CAAC,GAAG,EAAE,CAClC,WAAW,CAAC,KAAK,CAAC,IAAI;QACpB,CAAC,CAAC,KAAK;QACP,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,IAAI,WAAW,CAAC,KAAK,CAAC,OAAO,IAAI,WAAW,CAC1E,CAAC;IACF,MAAM,WAAW,GAAG,QAAQ,CAC1B,GAAG,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,IAAI,WAAW,CAAC,KAAK,CAAC,WAAW,IAAI,CAAC,CAC1E,CAAC;IAEF,MAAM,YAAY,GAAG,QAAQ,CAAC,GAAG,EAAE,CACjC,mBAAmB,CAAC,aAAa,CAAC,KAAK,EAAE,WAAW,CAAC,KAAK,CAAC,CAC5D,CAAC;IAEF,OAAO,CAAC,kBAAkB,EAAE,YAAY,CAAC,CAAC;AAC5C,CAAC,CAAC;AAEF;;GAEG;AACH,MAAM,CAAC,MAAM,eAAe,GAAG,GAAoB,EAAE;IACnD,MAAM,YAAY,GAAG,MAAM,CAAC,kBAAkB,CAAC,CAAC;IAEhD,IAAI,CAAC,YAAY;QACf,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;IAEnE,OAAO,YAAY,CAAC;AACtB,CAAC,CAAC","sourcesContent":["import { usePageFrontmatter } from \"@vuepress/client\";\nimport type { ComputedRef, InjectionKey } from \"vue\";\nimport { computed, inject, provide } from \"vue\";\n\nimport { useThemeLocaleData } from \"@theme-hope/composables/index\";\n\nimport { resolveSidebarItems } from \"./resolveConfig.js\";\nimport type { ThemeNormalPageFrontmatter } from \"../../../../shared/index.js\";\nimport type { ResolvedSidebarItem } from \"../utils/index.js\";\n\ndeclare const __VUEPRESS_DEV__: boolean;\n\nexport type SidebarItemsRef = ComputedRef<ResolvedSidebarItem[]>;\n\nexport const sidebarItemsSymbol: InjectionKey<SidebarItemsRef> = Symbol(\n  __VUEPRESS_DEV__ ? \"sidebarItems\" : \"\"\n);\n\n/**\n * Create sidebar items ref and provide as global computed in setup\n */\nexport const setupSidebarItems = (): void => {\n  const frontmatter = usePageFrontmatter<ThemeNormalPageFrontmatter>();\n  const themeLocale = useThemeLocaleData();\n\n  // get sidebar config from frontmatter > themeConfig\n  const sidebarConfig = computed(() =>\n    frontmatter.value.home\n      ? false\n      : frontmatter.value.sidebar ?? themeLocale.value.sidebar ?? \"structure\"\n  );\n  const headerDepth = computed(\n    () => frontmatter.value.headerDepth ?? themeLocale.value.headerDepth ?? 2\n  );\n\n  const sidebarItems = computed(() =>\n    resolveSidebarItems(sidebarConfig.value, headerDepth.value)\n  );\n\n  provide(sidebarItemsSymbol, sidebarItems);\n};\n\n/**\n * Inject sidebar items global computed\n */\nexport const useSidebarItems = (): SidebarItemsRef => {\n  const sidebarItems = inject(sidebarItemsSymbol);\n\n  if (!sidebarItems)\n    throw new Error(\"useSidebarItems() is called without provider.\");\n\n  return sidebarItems;\n};\n"]}