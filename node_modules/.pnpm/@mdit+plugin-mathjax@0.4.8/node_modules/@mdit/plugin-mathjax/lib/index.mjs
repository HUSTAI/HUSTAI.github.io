import{createRequire as l}from"node:module";import{tex as x}from"@mdit/plugin-tex";import{AssistiveMmlHandler as h}from"mathjax-full/js/a11y/assistive-mml.js";import{liteAdaptor as d}from"mathjax-full/js/adaptors/liteAdaptor.js";import{RegisterHTMLHandler as M}from"mathjax-full/js/handlers/html.js";import{AllPackages as j}from"mathjax-full/js/input/tex/AllPackages.js";import{TeX as v}from"mathjax-full/js/input/tex.js";import{TeX as X}from"mathjax-full/js/input/tex.js";import{mathjax as s}from"mathjax-full/js/mathjax.js";import{mathjax as q}from"mathjax-full/js/mathjax.js";import{CHTML as c}from"mathjax-full/js/output/chtml.js";import{CHTML as P}from"mathjax-full/js/output/chtml.js";import{SVG as H}from"mathjax-full/js/output/svg.js";import{SVG as Z}from"mathjax-full/js/output/svg.js";import S from"upath";const i=t=>({InputJax:new v({packages:j,...t.tex}),OutputJax:t.output==="chtml"?new c({fontURL:S.dirname(l(import.meta.url).resolve("mathjax-full/es5/output/chtml/fonts/woff-v2/MathJax_Zero.woff")),adaptiveCSS:!0,...t.chtml}):new H({fontCache:"none",...t.svg}),enableAssistiveMml:t.a11y!==!1}),T=(t={})=>{const e=i(t),o=d(),n=M(o);t.a11y!==!1&&h(n);const{OutputJax:r,InputJax:a}=e,m=()=>{r instanceof c&&r.clearCache()},p=()=>{a.reset()},u=()=>{const f=o.innerHTML(e.OutputJax.styleSheet(s.document("",e)));return m(),f};return{adaptor:o,documentOptions:e,mathFence:t.mathFence??!1,clearStyle:m,reset:p,outputStyle:u}},g=(t,e)=>{const{adaptor:o,documentOptions:n,mathFence:r=!1}=e;t.use(x,{mathFence:r,render:(a,m)=>{const p=s.document(a,n).convert(a,{display:m});return o.outerHTML(p)}})};export{P as CHTML,q as Mathjax,Z as SVG,X as TeX,T as createMathjaxInstance,i as getDocumentOptions,g as mathjax};
//# sourceMappingURL=index.mjs.map
