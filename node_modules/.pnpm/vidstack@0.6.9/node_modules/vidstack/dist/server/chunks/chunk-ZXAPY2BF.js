import { renderRadioGroup } from './chunk-TE367BQX.js';
import { ClassManager } from './chunk-XCUHASYJ.js';
import { RadioGroup } from './chunk-5RWMH5KW.js';
import { Radio } from './chunk-SKUE5DXF.js';
import { MenuItems } from './chunk-3QXOFPLA.js';
import { useMedia } from './chunk-ZIBTY3GT.js';
import { $$_ssr } from 'maverick.js/ssr';
import { effect } from 'maverick.js';
import { defineElement } from 'maverick.js/element';

var $$_templ = ['<!$><span part="label"><!$>', "</span>"];
var PlaybackRateMenuItems = class extends MenuItems {
  constructor(instance) {
    super(instance);
    this._media = useMedia();
  }
  onConnect(el) {
    effect(this._watchHintText.bind(this));
    const { radioClass, radioCheckClass } = this.$props;
    new ClassManager(el)._observe("media-radio", radioClass)._observe('[part="check"]', radioCheckClass);
  }
  _watchHintText() {
    const { normalLabel } = this.$props, { playbackRate } = this._media.$store, rate = playbackRate();
    this._menu._hint.set(rate === 1 ? normalLabel() : rate + "\xD7");
  }
  _onChange(event) {
    const radioGroup = event.target;
    this._media.remote.changePlaybackRate(+radioGroup.value, event);
  }
  _getValue() {
    const { playbackRate } = this._media.$store;
    return playbackRate() + "";
  }
  _getOptions() {
    const { rates, normalLabel } = this.$props;
    return rates().map((rate) => ({
      value: rate + "",
      content: () => $$_ssr($$_templ, rate === 1 ? normalLabel() : rate + "\xD7")
    }));
  }
  render() {
    const { radioGroupClass } = this.$props;
    return renderRadioGroup({
      value: this._getValue.bind(this),
      options: this._getOptions.bind(this),
      radioGroupClass,
      onChange: this._onChange.bind(this)
    });
  }
};
PlaybackRateMenuItems.el = defineElement({
  tagName: "media-playback-rate-menu-items",
  props: {
    normalLabel: "Normal",
    rates: [0.25, 0.5, 0.75, 1, 1.25, 1.5, 1.75, 2],
    radioGroupClass: null,
    radioClass: null,
    radioCheckClass: null
  }
});
PlaybackRateMenuItems.register = [RadioGroup, Radio];

export { PlaybackRateMenuItems };
