import { toggleButtonProps, ToggleButton } from './chunk-RGSXXUQI.js';
import { $ariaBool } from './chunk-EVP5E6AO.js';
import { setARIALabel } from './chunk-JTTKMFDW.js';
import { useMedia } from './chunk-ZIBTY3GT.js';
import { Icon } from './chunk-HPMGEKCS.js';
import { picture_in_picture_exit_default } from './chunk-WTETBRVG.js';
import { picture_in_picture_default } from './chunk-BD76OTCC.js';
import { $$_create_component } from 'maverick.js/ssr';
import { defineElement } from 'maverick.js/element';

var PIPButton = class extends ToggleButton {
  constructor() {
    super(...arguments);
    this._keyShortcut = "togglePictureInPicture";
  }
  onAttach(el) {
    this._media = useMedia();
    this._pressed = this._isPressed.bind(this);
    super.onAttach(el);
    setARIALabel(el, this._getLabel.bind(this));
    const { pictureInPicture } = this._media.$store;
    this.setAttributes({
      "aria-hidden": $ariaBool(this._isHidden.bind(this)),
      "data-pip": pictureInPicture
    });
  }
  _onPress(event) {
    const remote = this._media.remote;
    this._pressed() ? remote.exitPictureInPicture(event) : remote.enterPictureInPicture(event);
  }
  _isPressed() {
    const { pictureInPicture } = this._media.$store;
    return pictureInPicture();
  }
  _isHidden() {
    const { canPictureInPicture } = this._media.$store;
    return !canPictureInPicture();
  }
  _getLabel() {
    const { pictureInPicture } = this._media.$store;
    return pictureInPicture() ? "Exit Picture In Picture" : "Enter Picture In Picture";
  }
  render() {
    return [
      $$_create_component(Icon, { paths: picture_in_picture_default, slot: "enter" }),
      $$_create_component(Icon, { paths: picture_in_picture_exit_default, slot: "exit" })
    ];
  }
};
PIPButton.el = defineElement({
  tagName: "media-pip-button",
  props: toggleButtonProps
});

export { PIPButton };
