import { Tooltip } from './chunk-KKO6J3BU.js';
import { VolumeSlider } from './chunk-OTIMLXP6.js';
import { SliderThumbnail } from './chunk-B5WOLIJG.js';
import { SliderValue } from './chunk-3MX4LIKX.js';
import { SliderVideo } from './chunk-2XBVKXSY.js';
import { TimeSlider } from './chunk-FCHXUPLA.js';
import { Slider } from './chunk-PAFQPZS6.js';
import { Time } from './chunk-5FE2F5AG.js';
import { PlaybackRateMenuItems } from './chunk-ZXAPY2BF.js';
import { Player } from './chunk-HGP4J5WC.js';
import { Poster } from './chunk-2QEGRBFM.js';
import { QualityMenuButton } from './chunk-57OL5R3S.js';
import { QualityMenuItems } from './chunk-A4DBFVNS.js';
import { SeekButton } from './chunk-MY2FGNE2.js';
import { Menu } from './chunk-PALBLMCC.js';
import { MuteButton } from './chunk-BQKGS4S5.js';
import { Outlet } from './chunk-NKBW4B6B.js';
import { PIPButton } from './chunk-3JMJZNWQ.js';
import { PlayButton } from './chunk-COS3VFYB.js';
import { PlaybackRateMenuButton } from './chunk-NHIC66MT.js';
import { CaptionsMenuItems } from './chunk-JSSTSFA2.js';
import { Captions } from './chunk-R43I4DRV.js';
import { ChaptersMenuItems } from './chunk-4BWBKFM6.js';
import { Thumbnail } from './chunk-MCANHAYI.js';
import { FullscreenButton } from './chunk-MBBDB3JG.js';
import { Gesture } from './chunk-ILGPP2W6.js';
import { LiveIndicator } from './chunk-J3NSFYPM.js';
import { AudioMenuButton } from './chunk-F5YZFZEC.js';
import { AudioMenuItems } from './chunk-4F5G36NV.js';
import { RadioGroup } from './chunk-5RWMH5KW.js';
import { Radio } from './chunk-SKUE5DXF.js';
import { MenuItems } from './chunk-3QXOFPLA.js';
import { BufferingIndicator } from './chunk-X2EJI2SD.js';
import { CaptionButton } from './chunk-ZZBQCJ7P.js';
import { ToggleButton } from './chunk-RGSXXUQI.js';
import { useMedia } from './chunk-ZIBTY3GT.js';
import { CaptionsMenuButton } from './chunk-JTT52VRX.js';
import { MenuButton } from './chunk-BH4KDLCZ.js';
import { defineElement, Component, registerLiteCustomElement } from 'maverick.js/element';
import { createContext, provideContext } from 'maverick.js';
import 'maverick.js/ssr';
import 'maverick.js/std';

var communitySkinContext = createContext();

// src/player/skins/community/skin.tsx
var CommunitySkin = class extends Component {
  constructor(instance) {
    super(instance);
    this._media = useMedia();
    provideContext(communitySkinContext, {
      $props: this.$props,
      $media: this._media.$store
    });
  }
  /** We need this to compute and save the layout type to prevent unnecessary re-renders. */
  _getLayoutType() {
    const { viewType, streamType } = this._media.$store;
    return viewType() === "audio" ? streamType().includes("live") ? "audio:live" : "audio" : streamType().endsWith("live") ? "video:live" : "video";
  }
  onAttach() {
    this.setAttributes({
      "data-audio": this._isAudio.bind(this),
      "data-video": this._isVideo.bind(this),
      "data-mobile": this._isMobile.bind(this)
    });
  }
  _isAudio() {
    const { viewType } = this._media.$store;
    return viewType() === "audio";
  }
  _isVideo() {
    const { viewType } = this._media.$store;
    return viewType() !== "audio";
  }
  _isMobile() {
    const { breakpointX } = this._media.$store;
    return breakpointX() === "sm";
  }
  render() {
    return null;
  }
};
CommunitySkin.el = defineElement({
  tagName: "media-community-skin",
  nohydrate: true,
  props: {
    translations: null
  }
});
CommunitySkin.register = getUIComponents;

// src/register.ts
function getUIComponents() {
  return [
    Poster,
    BufferingIndicator,
    Tooltip,
    Thumbnail,
    PlayButton,
    MuteButton,
    PIPButton,
    FullscreenButton,
    CaptionButton,
    SeekButton,
    Slider,
    TimeSlider,
    VolumeSlider,
    SliderThumbnail,
    SliderValue,
    SliderVideo,
    Time,
    ToggleButton,
    LiveIndicator,
    Captions,
    Gesture,
    Menu,
    MenuButton,
    MenuItems,
    RadioGroup,
    Radio,
    AudioMenuButton,
    AudioMenuItems,
    CaptionsMenuButton,
    CaptionsMenuItems,
    ChaptersMenuItems,
    QualityMenuButton,
    QualityMenuItems,
    PlaybackRateMenuButton,
    PlaybackRateMenuItems
  ];
}
function registerAllElements() {
  [Player, Outlet, ...getUIComponents(), CommunitySkin].map(registerLiteCustomElement);
}

export { CommunitySkin, getUIComponents, registerAllElements };
