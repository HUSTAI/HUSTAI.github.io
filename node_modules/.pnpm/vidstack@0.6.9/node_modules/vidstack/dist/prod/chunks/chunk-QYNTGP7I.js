import { toggleButtonProps, ToggleButton } from './chunk-332RFI7E.js';
import { setARIALabel } from './chunk-HQQTSFXD.js';
import { useMedia } from './chunk-ZIBTY3GT.js';
import { Icon } from './chunk-OSS74BPE.js';
import { volume_high_default } from './chunk-KQUCP2EG.js';
import { volume_low_default } from './chunk-DZHDFPQR.js';
import { mute_default } from './chunk-IVWVADOA.js';
import { $$_create_component } from 'maverick.js/dom';
import { defineElement } from 'maverick.js/element';

var MuteButton = class extends ToggleButton {
  constructor() {
    super(...arguments);
    this.pa = "toggleMuted";
  }
  onAttach(el) {
    this.a = useMedia();
    this.v = this.X.bind(this);
    setARIALabel(el, this.H.bind(this));
    this.setAttributes({
      "data-muted": this.v,
      "data-volume": this.Eg.bind(this)
    });
    super.onAttach(el);
  }
  J(event) {
    const remote = this.a.remote;
    this.v() ? remote.unmute(event) : remote.mute(event);
  }
  X() {
    const { muted, volume } = this.a.$store;
    return muted() || volume() === 0;
  }
  H() {
    return this.v() ? "Unmute" : "Mute";
  }
  Eg() {
    const { muted, volume } = this.a.$store, $volume = volume();
    if (muted() || $volume === 0)
      return "muted";
    else if ($volume >= 0.5)
      return "high";
    else if ($volume < 0.5)
      return "low";
  }
  render() {
    return [
      $$_create_component(Icon, { paths: volume_high_default, slot: "volume-high" }),
      $$_create_component(Icon, { paths: volume_low_default, slot: "volume-low" }),
      $$_create_component(Icon, { paths: mute_default, slot: "volume-muted" })
    ];
  }
};
MuteButton.el = defineElement({
  tagName: "media-mute-button",
  props: toggleButtonProps
});

export { MuteButton };
