import { isTrackCaptionKind } from './chunk-PXCLVUYU.js';
import { toggleButtonProps, ToggleButton } from './chunk-332RFI7E.js';
import { $ariaBool } from './chunk-EVP5E6AO.js';
import { setARIALabel } from './chunk-HQQTSFXD.js';
import { useMedia } from './chunk-ZIBTY3GT.js';
import { Icon } from './chunk-OSS74BPE.js';
import { closed_captions_on_default } from './chunk-FJ2OEY6P.js';
import { closed_captions_default } from './chunk-3XSNY5HY.js';
import { $$_create_component } from 'maverick.js/dom';
import { defineElement } from 'maverick.js/element';

var CaptionButton = class extends ToggleButton {
  constructor() {
    super(...arguments);
    this.pa = "toggleCaptions";
  }
  onAttach(el) {
    this.a = useMedia();
    this.v = this.X.bind(this);
    super.onAttach(el);
    setARIALabel(el, this.H.bind(this));
    this.setAttributes({
      "aria-hidden": $ariaBool(this.z.bind(this))
    });
  }
  J(event) {
    this.a.remote.toggleCaptions(event);
  }
  X() {
    const { textTrack } = this.a.$store, track = textTrack();
    return !!track && isTrackCaptionKind(track);
  }
  z() {
    const { textTracks } = this.a.$store;
    return textTracks().filter(isTrackCaptionKind).length == 0;
  }
  H() {
    const { textTrack } = this.a.$store;
    return textTrack() ? "Closed-Captions Off" : "Closed-Captions On";
  }
  render() {
    return [
      $$_create_component(Icon, { paths: closed_captions_on_default, slot: "on" }),
      $$_create_component(Icon, { paths: closed_captions_default, slot: "off" })
    ];
  }
};
CaptionButton.el = defineElement({
  tagName: "media-caption-button",
  props: toggleButtonProps
});

export { CaptionButton };
