import { toggleButtonProps, ToggleButton } from './chunk-332RFI7E.js';
import { setARIALabel } from './chunk-HQQTSFXD.js';
import { useMedia } from './chunk-ZIBTY3GT.js';
import { Icon } from './chunk-OSS74BPE.js';
import { replay_default } from './chunk-NRSSXRVS.js';
import { play_default } from './chunk-N7ILVN7U.js';
import { pause_default } from './chunk-2DGYZ3AT.js';
import { $$_create_component } from 'maverick.js/dom';
import { defineElement } from 'maverick.js/element';

var PlayButton = class extends ToggleButton {
  constructor() {
    super(...arguments);
    this.pa = "togglePaused";
  }
  onAttach(el) {
    this.a = useMedia();
    this.v = this.X.bind(this);
    super.onAttach(el);
    setARIALabel(el, this.H.bind(this));
    const { paused, ended } = this.a.$store;
    this.setAttributes({
      "data-paused": paused,
      "data-ended": ended
    });
  }
  J(event) {
    const remote = this.a.remote;
    this.v() ? remote.pause(event) : remote.play(event);
  }
  X() {
    const { paused } = this.a.$store;
    return !paused();
  }
  H() {
    const { paused } = this.a.$store;
    return paused() ? "Play" : "Pause";
  }
  render() {
    return [
      $$_create_component(Icon, { paths: play_default, slot: "play" }),
      $$_create_component(Icon, { paths: replay_default, slot: "replay" }),
      $$_create_component(Icon, { paths: pause_default, slot: "pause" })
    ];
  }
};
PlayButton.el = defineElement({
  tagName: "media-play-button",
  props: toggleButtonProps
});

export { PlayButton };
