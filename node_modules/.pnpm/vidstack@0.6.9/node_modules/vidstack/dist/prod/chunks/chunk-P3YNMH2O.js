import { radioGroupContext } from './chunk-4L7R5OAB.js';
import { setAttributeIfEmpty } from './chunk-HQQTSFXD.js';
import { menuContext } from './chunk-HSL7QSWM.js';
import { __decorateClass } from './chunk-VPSTUDLO.js';
import { signal, provideContext, hasProvidedContext, effect, peek } from 'maverick.js';
import { defineElement, prop, Component } from 'maverick.js/element';

var RadioGroup = class extends Component {
  constructor(instance) {
    super(instance);
    this.Qa = /* @__PURE__ */ new Set();
    this._ = signal("");
    this.Uh = this.o.bind(this);
    provideContext(radioGroupContext, {
      add: this.Sh.bind(this),
      remove: this.Th.bind(this)
    });
  }
  get values() {
    return Array.from(this.Qa).map((radio) => radio._());
  }
  get value() {
    return this._();
  }
  set value(value) {
    this.o(value);
  }
  onAttach(el) {
    const isMenuItem = hasProvidedContext(menuContext);
    if (!isMenuItem)
      setAttributeIfEmpty(el, "role", "radiogroup");
    this.xe();
    this.setAttributes({ value: this._ });
  }
  onConnect() {
    effect(this.xe.bind(this));
  }
  onDestroy() {
    this.Qa.clear();
  }
  Sh(radio) {
    if (this.Qa.has(radio))
      return;
    this.Qa.add(radio);
    radio.Ib = this.Uh;
    radio.lb(radio._() === this._());
  }
  Th(radio) {
    radio.Ib = null;
    this.Qa.delete(radio);
  }
  xe() {
    this.o(this.$props.value());
  }
  o(newValue, trigger) {
    const currentValue = peek(this._);
    if (!newValue || newValue === currentValue)
      return;
    const currentRadio = this.ye(currentValue), newRadio = this.ye(newValue);
    currentRadio?.lb(false, trigger);
    newRadio?.lb(true, trigger);
    this._.set(newValue);
    this.dispatch("change", { trigger });
  }
  ye(newValue) {
    for (const radio of this.Qa) {
      if (newValue === peek(radio._))
        return radio;
    }
    return null;
  }
};
RadioGroup.el = defineElement({
  tagName: "media-radio-group",
  props: { value: "" }
});
__decorateClass([
  prop
], RadioGroup.prototype, "values", 1);
__decorateClass([
  prop
], RadioGroup.prototype, "value", 1);

export { RadioGroup };
