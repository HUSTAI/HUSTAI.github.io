import { $ariaBool } from './chunk-EVP5E6AO.js';
import { setAttributeIfEmpty, setARIALabel, onPress } from './chunk-HQQTSFXD.js';
import { useMedia } from './chunk-ZIBTY3GT.js';
import { Icon } from './chunk-OSS74BPE.js';
import { TooltipController } from './chunk-QOO3T2DC.js';
import { seek_backward_default } from './chunk-PDX6CZZG.js';
import { seek_forward_default } from './chunk-CPWHUQBL.js';
import { FocusVisibleController } from './chunk-UMWH4QNT.js';
import { $$_create_component } from 'maverick.js/dom';
import { defineElement, Component } from 'maverick.js/element';

var SeekButton = class extends Component {
  constructor(instance) {
    super(instance);
    this.a = useMedia();
    new FocusVisibleController(instance);
    new TooltipController(instance);
  }
  onAttach(el) {
    setAttributeIfEmpty(el, "tabindex", "0");
    setAttributeIfEmpty(el, "role", "button");
    setARIALabel(el, this.H.bind(this));
    const { seconds, defaultAppearance } = this.$props;
    this.setAttributes({
      seconds,
      "default-appearance": defaultAppearance,
      "aria-hidden": $ariaBool(this.z.bind(this)),
      "data-media-button": true
    });
  }
  onConnect(el) {
    onPress(el, this.J.bind(this));
  }
  z() {
    const { canSeek } = this.a.$store;
    return !canSeek();
  }
  H() {
    const { seconds } = this.$props;
    return `Seek ${seconds() > 0 ? "forward" : "backward"} ${seconds()} seconds`;
  }
  J(event) {
    const { seconds, disabled } = this.$props;
    if (disabled())
      return;
    const { currentTime } = this.a.$store, seekTo = currentTime() + seconds();
    this.a.remote.seek(seekTo, event);
  }
  render() {
    return [
      $$_create_component(Icon, { paths: seek_backward_default, slot: "backward" }),
      $$_create_component(Icon, { paths: seek_forward_default, slot: "forward" })
    ];
  }
};
SeekButton.el = defineElement({
  tagName: "media-seek-button",
  props: {
    disabled: false,
    defaultAppearance: false,
    seconds: 30
  }
});

export { SeekButton };
