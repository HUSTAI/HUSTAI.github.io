{"version":3,"file":"sdk.umd.js","sources":["../src/constants.ts","../src/params.ts","../src/helpers.ts","../src/rdc.ts","../src/vm.ts","../src/connection.ts","../src/generate.ts","../src/lib.ts","../src/index.ts"],"sourcesContent":["/**\n * Number of milliseconds between attempts to get a response from an embedded frame\n */\nexport const CONNECT_INTERVAL = 500;\n\n/**\n * How many times should we try to get an init response from an embedded frame\n */\nexport const CONNECT_MAX_ATTEMPTS = 20;\n\n/**\n * Default height attribute for iframes\n */\nexport const DEFAULT_FRAME_HEIGHT = 300;\n\n// Local declaration to satisfy TypeScript.\n// Usage of this variable will be replaced at build time,\n// and should not appear in the built bundles and .d.ts files\ndeclare var __STACKBLITZ_SERVER_ORIGIN__: string | undefined;\n\n/**\n * Origin of the StackBlitz instance\n */\nexport const DEFAULT_ORIGIN: string = __STACKBLITZ_SERVER_ORIGIN__ || 'https://stackblitz.com';\n\n/**\n * List of supported template names.\n */\nexport const PROJECT_TEMPLATES = [\n  'angular-cli',\n  'create-react-app',\n  'html',\n  'javascript',\n  'node',\n  'polymer',\n  'typescript',\n  'vue',\n] as const;\n\n/**\n * Supported sidebar views\n */\nexport const UI_SIDEBAR_VIEWS = ['project', 'search', 'ports', 'settings'] as const;\n\n/**\n * Supported editor themes\n */\nexport const UI_THEMES = ['light', 'dark'] as const;\n\n/**\n * Supported editor view modes\n */\nexport const UI_VIEWS = ['editor', 'preview'] as const;\n","import type { EmbedOptions, OpenOptions } from './interfaces';\n\nimport { UI_SIDEBAR_VIEWS, UI_THEMES, UI_VIEWS } from './constants';\n\nexport type ParamOptions = Omit<\n  OpenOptions & EmbedOptions,\n  'origin' | 'newWindow' | 'height' | 'width'\n>;\n\n/**\n * URL parameter names supported by the StackBlitz instance.\n *\n * A couple notes:\n *\n * - Names don't always match the keys in EmbedOptions / OpenOptions.\n *   For example, options use `openFile` but the expected param is `file`.\n * - While updated instances perform a case-insensitive lookup for query\n *   parameters, some Enterprise Edition deployments may not, and we need to\n *   use specific (and sometimes inconsistent) casing; see for example\n *   'hidedevtools' vs 'hideNavigation'.\n */\ntype ParamName =\n  | '_test'\n  | 'clicktoload'\n  | 'ctl'\n  | 'devtoolsheight'\n  | 'embed'\n  | 'file'\n  | 'hidedevtools'\n  | 'hideExplorer'\n  | 'hideNavigation'\n  | 'initialpath'\n  | 'showSidebar'\n  | 'sidebarView'\n  | 'startScript'\n  | 'terminalHeight'\n  | 'theme'\n  | 'view'\n  | 'zenMode';\n\nexport const generators: Record<keyof ParamOptions, (value: any) => string> = {\n  clickToLoad: (value: ParamOptions['clickToLoad']) => trueParam('ctl', value),\n  devToolsHeight: (value: ParamOptions['devToolsHeight']) => percentParam('devtoolsheight', value),\n  forceEmbedLayout: (value: ParamOptions['forceEmbedLayout']) => trueParam('embed', value),\n  hideDevTools: (value: ParamOptions['hideDevTools']) => trueParam('hidedevtools', value),\n  hideExplorer: (value: ParamOptions['hideExplorer']) => trueParam('hideExplorer', value),\n  hideNavigation: (value: ParamOptions['hideNavigation']) => trueParam('hideNavigation', value),\n  openFile: (value: ParamOptions['openFile']) => stringParams('file', value),\n  showSidebar: (value: ParamOptions['showSidebar']) => booleanParam('showSidebar', value),\n  sidebarView: (value: ParamOptions['sidebarView']) =>\n    enumParam('sidebarView', value, UI_SIDEBAR_VIEWS),\n  startScript: (value: ParamOptions['startScript']) => stringParams('startScript', value),\n  terminalHeight: (value: ParamOptions['terminalHeight']) => percentParam('terminalHeight', value),\n  theme: (value: ParamOptions['theme']) => enumParam('theme', value, UI_THEMES),\n  view: (value: ParamOptions['view']) => enumParam('view', value, UI_VIEWS),\n  zenMode: (value: ParamOptions['zenMode']) => trueParam('zenMode', value),\n};\n\nexport function buildParams(options: ParamOptions = {}): string {\n  const params: string[] = Object.entries(options)\n    .map(([key, value]) => {\n      if (value != null && generators.hasOwnProperty(key)) {\n        return generators[key as keyof ParamOptions](value);\n      }\n      return '';\n    })\n    .filter(Boolean);\n\n  return params.length ? `?${params.join('&')}` : '';\n}\n\nexport function trueParam(name: ParamName, value?: boolean): string {\n  if (value === true) {\n    return `${name}=1`;\n  }\n  return '';\n}\n\nexport function booleanParam(name: ParamName, value?: boolean): string {\n  if (typeof value === 'boolean') {\n    return `${name}=${value ? '1' : '0'}`;\n  }\n  return '';\n}\n\nexport function percentParam(name: ParamName, value?: number): string {\n  if (typeof value === 'number' && !Number.isNaN(value)) {\n    const clamped = Math.min(100, Math.max(0, value));\n    return `${name}=${encodeURIComponent(Math.round(clamped))}`;\n  }\n  return '';\n}\n\nexport function enumParam(\n  name: ParamName,\n  value: string = '',\n  allowList: readonly string[] = []\n): string {\n  if (allowList.includes(value)) {\n    return `${name}=${encodeURIComponent(value)}`;\n  }\n  return '';\n}\n\nexport function stringParams(name: ParamName, value?: string | string[]): string {\n  const values = Array.isArray(value) ? value : [value];\n  return values\n    .filter((val) => typeof val === 'string' && val.trim() !== '')\n    .map((val) => `${name}=${encodeURIComponent(val!)}`)\n    .join('&');\n}\n","import type { EmbedOptions, OpenOptions } from './interfaces';\nimport { DEFAULT_FRAME_HEIGHT, DEFAULT_ORIGIN } from './constants';\nimport { buildParams } from './params';\n\ntype Route = '/run' | `/edit/${string}` | `/github/${string}` | `/fork/${string}`;\n\n/**\n * Pseudo-random id string for internal accounting.\n * 8 characters long, and collisions around 1 per million.\n */\nexport function genID() {\n  return Math.random().toString(36).slice(2, 6) + Math.random().toString(36).slice(2, 6);\n}\n\nexport function openUrl(route: Route, options?: OpenOptions) {\n  return `${getOrigin(options)}${route}${buildParams(options)}`;\n}\n\nexport function embedUrl(route: Route, options?: EmbedOptions) {\n  const config: EmbedOptions = {\n    forceEmbedLayout: true,\n  };\n  if (options && typeof options === 'object') {\n    Object.assign(config, options);\n  }\n  return `${getOrigin(config)}${route}${buildParams(config)}`;\n}\n\nfunction getOrigin(options: OpenOptions & EmbedOptions = {}) {\n  const origin = typeof options.origin === 'string' ? options.origin : DEFAULT_ORIGIN;\n  return origin.replace(/\\/$/, '');\n}\n\nexport function replaceAndEmbed(\n  target: HTMLElement,\n  frame: HTMLIFrameElement,\n  options?: EmbedOptions\n) {\n  if (!frame || !target || !target.parentNode) {\n    throw new Error('Invalid Element');\n  }\n  if (target.id) {\n    frame.id = target.id;\n  }\n  if (target.className) {\n    frame.className = target.className;\n  }\n  setFrameDimensions(frame, options);\n  target.replaceWith(frame);\n}\n\nexport function findElement(elementOrId: string | HTMLElement) {\n  if (typeof elementOrId === 'string') {\n    const element = document.getElementById(elementOrId);\n    if (!element) {\n      throw new Error(`Could not find element with id '${elementOrId}'`);\n    }\n    return element;\n  } else if (elementOrId instanceof HTMLElement) {\n    return elementOrId;\n  }\n  throw new Error(`Invalid element: ${elementOrId}`);\n}\n\nexport function openTarget(options?: OpenOptions) {\n  return options && options.newWindow === false ? '_self' : '_blank';\n}\n\nfunction setFrameDimensions(frame: HTMLIFrameElement, options: EmbedOptions = {}) {\n  const height: string = Object.hasOwnProperty.call(options, 'height')\n    ? `${options.height}`\n    : `${DEFAULT_FRAME_HEIGHT}`;\n  const width: string | undefined = Object.hasOwnProperty.call(options, 'width')\n    ? `${options.width}`\n    : undefined;\n\n  frame.setAttribute('height', height);\n  if (width) {\n    frame.setAttribute('width', width);\n  } else {\n    frame.setAttribute('style', 'width:100%;');\n  }\n}\n","import { genID } from './helpers';\n\ninterface MessagePayload {\n  [key: string]: any;\n}\n\ninterface MessagePayloadWithMetadata extends MessagePayload {\n  __reqid: string;\n  __success: boolean;\n  __error?: string;\n}\n\ninterface MessageData {\n  type: string;\n  payload: MessagePayloadWithMetadata;\n}\n\ninterface RequestData {\n  type: string;\n  payload: MessagePayload;\n}\n\ninterface PendingResolvers {\n  [id: string]: {\n    resolve(value: any): void;\n    reject(error: string): void;\n  };\n}\n\nexport class RDC {\n  private port: MessagePort;\n  private pending: PendingResolvers = {};\n\n  constructor(port: MessagePort) {\n    this.port = port;\n    this.port.onmessage = this.messageListener.bind(this);\n  }\n\n  public request<TResult = null>({ type, payload }: RequestData): Promise<TResult | null> {\n    return new Promise((resolve, reject) => {\n      const id = genID();\n      this.pending[id] = { resolve, reject };\n      this.port.postMessage({\n        type,\n        payload: {\n          ...payload,\n          // Ensure the payload object includes the request ID\n          __reqid: id,\n        },\n      });\n    });\n  }\n\n  private messageListener(event: MessageEvent<MessageData>) {\n    if (typeof event.data.payload?.__reqid !== 'string') {\n      return;\n    }\n\n    const { type, payload } = event.data;\n    const { __reqid: id, __success: success, __error: error } = payload;\n\n    if (this.pending[id]) {\n      if (success) {\n        this.pending[id].resolve(this.cleanResult(payload));\n      } else {\n        this.pending[id].reject(error ? `${type}: ${error}` : type);\n      }\n      delete this.pending[id];\n    }\n  }\n\n  private cleanResult(payload: MessagePayloadWithMetadata): MessagePayload | null {\n    const result: Partial<typeof payload> = { ...payload };\n    delete result.__reqid;\n    delete result.__success;\n    delete result.__error;\n    // Null the result if payload was empty besides the private metadata fields\n    return Object.keys(result).length ? result : null;\n  }\n}\n","import type {\n  OpenFileOption,\n  ProjectDependencies,\n  ProjectFiles,\n  UiThemeOption,\n  UiViewOption,\n} from './interfaces';\nimport { RDC } from './rdc';\n\nexport interface FsDiff {\n  create: {\n    [path: string]: string;\n  };\n  destroy: string[];\n}\n\nexport class VM {\n  private _rdc: RDC;\n\n  constructor(port: MessagePort, config: { previewOrigin?: string }) {\n    this._rdc = new RDC(port);\n\n    Object.defineProperty(this.preview, 'origin', {\n      value: typeof config.previewOrigin === 'string' ? config.previewOrigin : null,\n      writable: false,\n    });\n  }\n\n  /**\n   * Apply batch updates to the project files in one call.\n   */\n  applyFsDiff(diff: FsDiff): Promise<null> {\n    const isObject = (val: any) => val !== null && typeof val === 'object';\n    if (!isObject(diff) || !isObject(diff.create)) {\n      throw new Error('Invalid diff object: expected diff.create to be an object.');\n    } else if (!Array.isArray(diff.destroy)) {\n      throw new Error('Invalid diff object: expected diff.destroy to be an array.');\n    }\n\n    return this._rdc.request({\n      type: 'SDK_APPLY_FS_DIFF',\n      payload: diff,\n    });\n  }\n\n  /**\n   * Get the project’s defined dependencies.\n   *\n   * In EngineBlock projects, version numbers represent the resolved dependency versions.\n   * In WebContainers-based projects, returns data from the project’s `package.json` without resolving installed version numbers.\n   */\n  getDependencies(): Promise<ProjectDependencies | null> {\n    return this._rdc.request<ProjectDependencies>({\n      type: 'SDK_GET_DEPS_SNAPSHOT',\n      payload: {},\n    });\n  }\n\n  /**\n   * Get a snapshot of the project files and their content.\n   */\n  getFsSnapshot(): Promise<ProjectFiles | null> {\n    return this._rdc.request<ProjectFiles>({\n      type: 'SDK_GET_FS_SNAPSHOT',\n      payload: {},\n    });\n  }\n\n  public editor = {\n    /**\n     * Open one of several files in tabs and/or split panes.\n     *\n     * @since 1.7.0 Added support for opening multiple files\n     */\n    openFile: (path: OpenFileOption): Promise<null> => {\n      return this._rdc.request({\n        type: 'SDK_OPEN_FILE',\n        payload: { path },\n      });\n    },\n\n    /**\n     * Set a project file as the currently selected file.\n     *\n     * - This may update the highlighted file in the file explorer,\n     *   and the currently open and/or focused editor tab.\n     * - It will _not_ open a new editor tab if the provided path does not\n     *   match a currently open tab. See `vm.editor.openFile` to open files.\n     *\n     * @since 1.7.0\n     * @experimental\n     */\n    setCurrentFile: (path: string): Promise<null> => {\n      return this._rdc.request({\n        type: 'SDK_SET_CURRENT_FILE',\n        payload: { path },\n      });\n    },\n\n    /**\n     * Change the color theme\n     *\n     * @since 1.7.0\n     */\n    setTheme: (theme: UiThemeOption): Promise<null> => {\n      return this._rdc.request({\n        type: 'SDK_SET_UI_THEME',\n        payload: { theme },\n      });\n    },\n\n    /**\n     * Change the display mode of the project:\n     *\n     * - `default`: show the editor and preview pane\n     * - `editor`: show the editor pane only\n     * - `preview`: show the preview pane only\n     *\n     * @since 1.7.0\n     */\n    setView: (view: UiViewOption): Promise<null> => {\n      return this._rdc.request({\n        type: 'SDK_SET_UI_VIEW',\n        payload: { view },\n      });\n    },\n\n    /**\n     * Change the display mode of the sidebar:\n     *\n     * - `true`: show the sidebar\n     * - `false`: hide the sidebar\n     *\n     * @since 1.7.0\n     */\n    showSidebar: (visible: boolean = true): Promise<null> => {\n      return this._rdc.request({\n        type: 'SDK_TOGGLE_SIDEBAR',\n        payload: { visible },\n      });\n    },\n  };\n\n  public preview = {\n    /**\n     * The origin (protocol and domain) of the preview iframe.\n     *\n     * In WebContainers-based projects, the origin will always be `null`;\n     * try using `vm.preview.getUrl` instead.\n     *\n     * @see https://developer.stackblitz.com/guides/user-guide/available-environments\n     */\n    origin: '' as string | null,\n\n    /**\n     * Get the current preview URL.\n     *\n     * In both and EngineBlock and WebContainers-based projects, the preview URL\n     * may not reflect the exact path of the current page, after user navigation.\n     *\n     * In WebContainers-based projects, the preview URL will be `null` initially,\n     * and until the project starts a web server.\n     *\n     * @since 1.7.0\n     * @experimental\n     */\n    getUrl: (): Promise<string | null> => {\n      return this._rdc\n        .request<{ url: string }>({\n          type: 'SDK_GET_PREVIEW_URL',\n          payload: {},\n        })\n        .then((data) => data?.url ?? null);\n    },\n\n    /**\n     * Change the path of the preview URL.\n     *\n     * In WebContainers-based projects, this will be ignored if there is no\n     * currently running web server.\n     *\n     * @since 1.7.0\n     * @experimental\n     */\n    setUrl: (path: string = '/'): Promise<null> => {\n      if (typeof path !== 'string' || !path.startsWith('/')) {\n        throw new Error(`Invalid argument: expected a path starting with '/', got '${path}'`);\n      }\n      return this._rdc.request<null>({\n        type: 'SDK_SET_PREVIEW_URL',\n        payload: { path },\n      });\n    },\n  };\n}\n","import { CONNECT_INTERVAL, CONNECT_MAX_ATTEMPTS } from './constants';\nimport { genID } from './helpers';\nimport { VM } from './vm';\n\nconst connections: Connection[] = [];\n\nexport class Connection {\n  element: HTMLIFrameElement;\n  id: string;\n  pending: Promise<VM>;\n  vm?: VM;\n\n  constructor(element: HTMLIFrameElement) {\n    this.id = genID();\n    this.element = element;\n    this.pending = new Promise<VM>((resolve, reject) => {\n      const listenForSuccess = ({ data, ports }: MessageEvent) => {\n        if (data?.action === 'SDK_INIT_SUCCESS' && data.id === this.id) {\n          this.vm = new VM(ports[0], data.payload);\n          resolve(this.vm);\n          cleanup();\n        }\n      };\n\n      const pingFrame = () => {\n        this.element.contentWindow?.postMessage(\n          {\n            action: 'SDK_INIT',\n            id: this.id,\n          },\n          '*'\n        );\n      };\n\n      // Remove the listener and interval.\n      function cleanup() {\n        window.clearInterval(interval);\n        window.removeEventListener('message', listenForSuccess);\n      }\n\n      // First we want to set up the listener for the frame\n      window.addEventListener('message', listenForSuccess);\n      // Then, lets immediately ping the frame.\n      pingFrame();\n      // Keep track of the current try number\n      let attempts = 0;\n      const interval = window.setInterval(() => {\n        // If the VM connection is open, cleanup and return\n        // This shouldn't ever happen, but just in case there's some race condition...\n        if (this.vm) {\n          cleanup();\n          return;\n        }\n\n        // If we've exceeded the max retries, fail this promise.\n        if (attempts >= CONNECT_MAX_ATTEMPTS) {\n          cleanup();\n          reject('Timeout: Unable to establish a connection with the StackBlitz VM');\n          // Remove the (now) failed connection from the connections array\n          connections.forEach((connection, index) => {\n            if (connection.id === this.id) {\n              connections.splice(index, 1);\n            }\n          });\n          return;\n        }\n\n        attempts++;\n        pingFrame();\n      }, CONNECT_INTERVAL);\n    });\n\n    connections.push(this);\n  }\n}\n\n// Accepts either the frame element OR the id.\nexport const getConnection = (identifier: string | HTMLIFrameElement) => {\n  const key = identifier instanceof Element ? 'element' : 'id';\n  return connections.find((c) => c[key] === identifier) ?? null;\n};\n","import type { Project, EmbedOptions, OpenOptions } from './interfaces';\nimport { PROJECT_TEMPLATES } from './constants';\nimport { embedUrl, openTarget, openUrl } from './helpers';\n\nfunction createHiddenInput(name: string, value: string) {\n  const input = document.createElement('input');\n  input.type = 'hidden';\n  input.name = name;\n  input.value = value;\n  return input;\n}\n\n/**\n * Encode file paths for use in input name attributes.\n * We need to replace square brackets (as used by Next.js, SvelteKit, etc.),\n * with custom escape sequences. Important: do not encodeURIComponent the\n * whole path, for compatibility with the StackBlitz backend.\n */\nfunction encodeFilePath(path: string) {\n  return path.replace(/\\[/g, '%5B').replace(/\\]/g, '%5D');\n}\n\nexport function createProjectForm({\n  template,\n  title,\n  description,\n  dependencies,\n  files,\n  settings,\n}: Project) {\n  if (!PROJECT_TEMPLATES.includes(template)) {\n    const names = PROJECT_TEMPLATES.map((t) => `'${t}'`).join(', ');\n    console.warn(`Unsupported project.template: must be one of ${names}`);\n  }\n\n  const inputs: HTMLInputElement[] = [];\n  const addInput = (name: string, value: string, defaultValue = '') => {\n    inputs.push(createHiddenInput(name, typeof value === 'string' ? value : defaultValue));\n  };\n\n  addInput('project[title]', title);\n  if (typeof description === 'string' && description.length > 0) {\n    addInput('project[description]', description);\n  }\n  addInput('project[template]', template, 'javascript');\n\n  if (dependencies) {\n    if (template === 'node') {\n      console.warn(\n        `Invalid project.dependencies: dependencies must be provided as a 'package.json' file when using the 'node' template.`\n      );\n    } else {\n      addInput('project[dependencies]', JSON.stringify(dependencies));\n    }\n  }\n\n  if (settings) {\n    addInput('project[settings]', JSON.stringify(settings));\n  }\n\n  Object.entries(files).forEach(([path, contents]) => {\n    addInput(`project[files][${encodeFilePath(path)}]`, contents);\n  });\n\n  const form = document.createElement('form');\n  form.method = 'POST';\n  form.setAttribute('style', 'display:none!important;');\n  form.append(...inputs);\n  return form;\n}\n\nexport function createProjectFrameHTML(project: Project, options?: EmbedOptions) {\n  const form = createProjectForm(project);\n  form.action = embedUrl('/run', options);\n  form.id = 'sb_run';\n\n  const html = `<!doctype html>\n<html>\n<head><title></title></head>\n<body>\n  ${form.outerHTML}\n  <script>document.getElementById('${form.id}').submit();</script>\n</body>\n</html>`;\n\n  return html;\n}\n\nexport function openNewProject(project: Project, options?: OpenOptions) {\n  const form = createProjectForm(project);\n  form.action = openUrl('/run', options);\n  form.target = openTarget(options);\n\n  document.body.appendChild(form);\n  form.submit();\n  document.body.removeChild(form);\n}\n","import type { Project, OpenOptions, EmbedOptions } from './interfaces';\nimport type { VM } from './vm';\nimport { Connection, getConnection } from './connection';\nimport { openNewProject, createProjectFrameHTML } from './generate';\nimport { embedUrl, findElement, openTarget, openUrl, replaceAndEmbed } from './helpers';\n\n/**\n * Get a VM instance for an existing StackBlitz project iframe.\n */\nexport function connect(frameEl: HTMLIFrameElement): Promise<VM> {\n  if (!frameEl?.contentWindow) {\n    return Promise.reject('Provided element is not an iframe.');\n  }\n  const connection = getConnection(frameEl) ?? new Connection(frameEl);\n  return connection.pending;\n}\n\n/**\n * Open an existing StackBlitz project in a new tab (or in the current window).\n */\nexport function openProject(project: Project, options?: OpenOptions) {\n  openNewProject(project, options);\n}\n\n/**\n * Open an existing StackBlitz project in a new tab (or in the current window).\n */\nexport function openProjectId(projectId: string, options?: OpenOptions) {\n  const url = openUrl(`/edit/${projectId}`, options);\n  const target = openTarget(options);\n  window.open(url, target);\n}\n\n/**\n * Open a project from Github and open it in a new tab (or in the current window).\n *\n * Example usage:\n *\n *     sdk.openGithubProject('some/repository');\n *     sdk.openGithubProject('some/repository/tree/some-branch');\n */\nexport function openGithubProject(repoSlug: string, options?: OpenOptions) {\n  const url = openUrl(`/github/${repoSlug}`, options);\n  const target = openTarget(options);\n  window.open(url, target);\n}\n\n/**\n * Create a new project and embed it on the current page.\n *\n * Returns a promise resolving to a VM instance.\n */\nexport function embedProject(\n  elementOrId: string | HTMLElement,\n  project: Project,\n  options?: EmbedOptions\n): Promise<VM> {\n  const element = findElement(elementOrId);\n  const html = createProjectFrameHTML(project, options);\n  const frame = document.createElement('iframe');\n\n  replaceAndEmbed(element, frame, options);\n\n  // HTML needs to be written after iframe is embedded\n  frame.contentDocument?.write(html);\n\n  return connect(frame);\n}\n\n/**\n * Embeds an existing StackBlitz project on the current page.\n *\n * Returns a promise resolving to a VM instance.\n */\nexport function embedProjectId(\n  elementOrId: string | HTMLElement,\n  projectId: string,\n  options?: EmbedOptions\n): Promise<VM> {\n  const element = findElement(elementOrId);\n  const frame = document.createElement('iframe');\n  frame.src = embedUrl(`/edit/${projectId}`, options);\n\n  replaceAndEmbed(element, frame, options);\n\n  return connect(frame);\n}\n\n/**\n * Embeds a project from Github on the current page.\n *\n * Returns a promise resolving to a VM instance.\n */\nexport function embedGithubProject(\n  elementOrId: string | HTMLElement,\n  repoSlug: string,\n  options?: EmbedOptions\n): Promise<VM> {\n  const element = findElement(elementOrId);\n  const frame = document.createElement('iframe');\n  frame.src = embedUrl(`/github/${repoSlug}`, options);\n\n  replaceAndEmbed(element, frame, options);\n\n  return connect(frame);\n}\n","import {\n  connect,\n  embedGithubProject,\n  embedProject,\n  embedProjectId,\n  openGithubProject,\n  openProject,\n  openProjectId,\n} from './lib';\n\n// Explicitly export public types (vs using `export * from './interfaces'`),\n// so that additions to interfaces don't become a part of our public API by mistake.\nexport type {\n  Project,\n  ProjectDependencies,\n  ProjectFiles,\n  ProjectSettings,\n  ProjectTemplate,\n  ProjectOptions,\n  EmbedOptions,\n  OpenOptions,\n  OpenFileOption,\n  UiThemeOption,\n  UiViewOption,\n} from './interfaces';\nexport type { FsDiff, VM } from './vm';\n\nconst StackBlitzSDK = {\n  connect,\n  embedGithubProject,\n  embedProject,\n  embedProjectId,\n  openGithubProject,\n  openProject,\n  openProjectId,\n};\n\n// Export a single object with methods, for compatibility with UMD and CommonJS.\n// Ideally we would also have named exports, but that can create incompatibilities\n// with some bundlers. To revisit in v2?\nexport default StackBlitzSDK;\n"],"names":[],"mappings":";;;;AAGO,QAAM,mBAAmB;AAKzB,QAAM,uBAAuB;AAK7B,QAAM,uBAAuB;AAU7B,QAAM,iBAAyD;AAK/D,QAAM,oBAAoB;AAAA,IAC/B;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAKO,QAAM,mBAAmB,CAAC,WAAW,UAAU,SAAS,UAAU;AAK5D,QAAA,YAAY,CAAC,SAAS,MAAM;AAK5B,QAAA,WAAW,CAAC,UAAU,SAAS;ACZrC,QAAM,aAAiE;AAAA,IAC5E,aAAa,CAAC,UAAuC,UAAU,OAAO,KAAK;AAAA,IAC3E,gBAAgB,CAAC,UAA0C,aAAa,kBAAkB,KAAK;AAAA,IAC/F,kBAAkB,CAAC,UAA4C,UAAU,SAAS,KAAK;AAAA,IACvF,cAAc,CAAC,UAAwC,UAAU,gBAAgB,KAAK;AAAA,IACtF,cAAc,CAAC,UAAwC,UAAU,gBAAgB,KAAK;AAAA,IACtF,gBAAgB,CAAC,UAA0C,UAAU,kBAAkB,KAAK;AAAA,IAC5F,UAAU,CAAC,UAAoC,aAAa,QAAQ,KAAK;AAAA,IACzE,aAAa,CAAC,UAAuC,aAAa,eAAe,KAAK;AAAA,IACtF,aAAa,CAAC,UACZ,UAAU,eAAe,OAAO,gBAAgB;AAAA,IAClD,aAAa,CAAC,UAAuC,aAAa,eAAe,KAAK;AAAA,IACtF,gBAAgB,CAAC,UAA0C,aAAa,kBAAkB,KAAK;AAAA,IAC/F,OAAO,CAAC,UAAiC,UAAU,SAAS,OAAO,SAAS;AAAA,IAC5E,MAAM,CAAC,UAAgC,UAAU,QAAQ,OAAO,QAAQ;AAAA,IACxE,SAAS,CAAC,UAAmC,UAAU,WAAW,KAAK;AAAA,EACzE;AAEgB,WAAA,YAAY,UAAwB,IAAY;AACxD,UAAA,SAAmB,OAAO,QAAQ,OAAO,EAC5C,IAAI,CAAC,CAAC,KAAK,KAAK,MAAM;AACrB,UAAI,SAAS,QAAQ,WAAW,eAAe,GAAG,GAAG;AAC5C,eAAA,WAAW,GAAyB,EAAE,KAAK;AAAA,MACpD;AACO,aAAA;AAAA,IAAA,CACR,EACA,OAAO,OAAO;AAEjB,WAAO,OAAO,SAAS,IAAI,OAAO,KAAK,GAAG,MAAM;AAAA,EAClD;AAEgB,WAAA,UAAU,MAAiB,OAAyB;AAClE,QAAI,UAAU,MAAM;AAClB,aAAO,GAAG;AAAA,IACZ;AACO,WAAA;AAAA,EACT;AAEgB,WAAA,aAAa,MAAiB,OAAyB;AACjE,QAAA,OAAO,UAAU,WAAW;AACvB,aAAA,GAAG,QAAQ,QAAQ,MAAM;AAAA,IAClC;AACO,WAAA;AAAA,EACT;AAEgB,WAAA,aAAa,MAAiB,OAAwB;AACpE,QAAI,OAAO,UAAU,YAAY,CAAC,OAAO,MAAM,KAAK,GAAG;AAC/C,YAAA,UAAU,KAAK,IAAI,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC;AAChD,aAAO,GAAG,QAAQ,mBAAmB,KAAK,MAAM,OAAO,CAAC;AAAA,IAC1D;AACO,WAAA;AAAA,EACT;AAEO,WAAS,UACd,MACA,QAAgB,IAChB,YAA+B,CAAA,GACvB;AACJ,QAAA,UAAU,SAAS,KAAK,GAAG;AACtB,aAAA,GAAG,QAAQ,mBAAmB,KAAK;AAAA,IAC5C;AACO,WAAA;AAAA,EACT;AAEgB,WAAA,aAAa,MAAiB,OAAmC;AAC/E,UAAM,SAAS,MAAM,QAAQ,KAAK,IAAI,QAAQ,CAAC,KAAK;AAC7C,WAAA,OACJ,OAAO,CAAC,QAAQ,OAAO,QAAQ,YAAY,IAAI,WAAW,EAAE,EAC5D,IAAI,CAAC,QAAQ,GAAG,QAAQ,mBAAmB,GAAI,GAAG,EAClD,KAAK,GAAG;AAAA,EACb;ACpGO,WAAS,QAAQ;AACtB,WAAO,KAAK,SAAS,SAAS,EAAE,EAAE,MAAM,GAAG,CAAC,IAAI,KAAK,OAAS,EAAA,SAAS,EAAE,EAAE,MAAM,GAAG,CAAC;AAAA,EACvF;AAEgB,WAAA,QAAQ,OAAc,SAAuB;AAC3D,WAAO,GAAG,UAAU,OAAO,IAAI,QAAQ,YAAY,OAAO;AAAA,EAC5D;AAEgB,WAAA,SAAS,OAAc,SAAwB;AAC7D,UAAM,SAAuB;AAAA,MAC3B,kBAAkB;AAAA,IAAA;AAEhB,QAAA,WAAW,OAAO,YAAY,UAAU;AACnC,aAAA,OAAO,QAAQ,OAAO;AAAA,IAC/B;AACA,WAAO,GAAG,UAAU,MAAM,IAAI,QAAQ,YAAY,MAAM;AAAA,EAC1D;AAEA,WAAS,UAAU,UAAsC,IAAI;AAC3D,UAAM,SAAS,OAAO,QAAQ,WAAW,WAAW,QAAQ,SAAS;AAC9D,WAAA,OAAO,QAAQ,OAAO,EAAE;AAAA,EACjC;AAEgB,WAAA,gBACd,QACA,OACA,SACA;AACA,QAAI,CAAC,SAAS,CAAC,UAAU,CAAC,OAAO,YAAY;AACrC,YAAA,IAAI,MAAM,iBAAiB;AAAA,IACnC;AACA,QAAI,OAAO,IAAI;AACb,YAAM,KAAK,OAAO;AAAA,IACpB;AACA,QAAI,OAAO,WAAW;AACpB,YAAM,YAAY,OAAO;AAAA,IAC3B;AACA,uBAAmB,OAAO,OAAO;AACjC,WAAO,YAAY,KAAK;AAAA,EAC1B;AAEO,WAAS,YAAY,aAAmC;AACzD,QAAA,OAAO,gBAAgB,UAAU;AAC7B,YAAA,UAAU,SAAS,eAAe,WAAW;AACnD,UAAI,CAAC,SAAS;AACN,cAAA,IAAI,MAAM,mCAAmC,cAAc;AAAA,MACnE;AACO,aAAA;AAAA,IAAA,WACE,uBAAuB,aAAa;AACtC,aAAA;AAAA,IACT;AACM,UAAA,IAAI,MAAM,oBAAoB,aAAa;AAAA,EACnD;AAEO,WAAS,WAAW,SAAuB;AAChD,WAAO,WAAW,QAAQ,cAAc,QAAQ,UAAU;AAAA,EAC5D;AAEA,WAAS,mBAAmB,OAA0B,UAAwB,IAAI;AAC1E,UAAA,SAAiB,OAAO,eAAe,KAAK,SAAS,QAAQ,IAC/D,GAAG,QAAQ,WACX,GAAG;AACD,UAAA,QAA4B,OAAO,eAAe,KAAK,SAAS,OAAO,IACzE,GAAG,QAAQ,UACX;AAEE,UAAA,aAAa,UAAU,MAAM;AACnC,QAAI,OAAO;AACH,YAAA,aAAa,SAAS,KAAK;AAAA,IAAA,OAC5B;AACC,YAAA,aAAa,SAAS,aAAa;AAAA,IAC3C;AAAA,EACF;ACrDO,QAAM,IAAI;AAAA,IAIf,YAAY,MAAmB;AAF/B,WAAQ,UAA4B;AAGlC,WAAK,OAAO;AACZ,WAAK,KAAK,YAAY,KAAK,gBAAgB,KAAK,IAAI;AAAA,IACtD;AAAA,IAEO,QAAwB,EAAE,MAAM,WAAiD;AACtF,aAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,cAAM,KAAK;AACX,aAAK,QAAQ,EAAE,IAAI,EAAE,SAAS,OAAO;AACrC,aAAK,KAAK,YAAY;AAAA,UACpB;AAAA,UACA,SAAS;AAAA,YACP,GAAG;AAAA;AAAA,YAEH,SAAS;AAAA,UACX;AAAA,QAAA,CACD;AAAA,MAAA,CACF;AAAA,IACH;AAAA,IAEQ,gBAAgB,OAAkC;AACxD,UAAI,OAAO,MAAM,KAAK,SAAS,YAAY,UAAU;AACnD;AAAA,MACF;AAEA,YAAM,EAAE,MAAM,YAAY,MAAM;AAChC,YAAM,EAAE,SAAS,IAAI,WAAW,SAAS,SAAS,MAAU,IAAA;AAExD,UAAA,KAAK,QAAQ,EAAE,GAAG;AACpB,YAAI,SAAS;AACX,eAAK,QAAQ,EAAE,EAAE,QAAQ,KAAK,YAAY,OAAO,CAAC;AAAA,QAAA,OAC7C;AACA,eAAA,QAAQ,EAAE,EAAE,OAAO,QAAQ,GAAG,SAAS,UAAU,IAAI;AAAA,QAC5D;AACO,eAAA,KAAK,QAAQ,EAAE;AAAA,MACxB;AAAA,IACF;AAAA,IAEQ,YAAY,SAA4D;AACxE,YAAA,SAAkC,EAAE,GAAG;AAC7C,aAAO,OAAO;AACd,aAAO,OAAO;AACd,aAAO,OAAO;AAEd,aAAO,OAAO,KAAK,MAAM,EAAE,SAAS,SAAS;AAAA,IAC/C;AAAA,EACF;AC/DO,QAAM,GAAG;AAAA,IAGd,YAAY,MAAmB,QAAoC;AAiDnE,WAAO,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMd,UAAU,CAAC,SAAwC;AAC1C,iBAAA,KAAK,KAAK,QAAQ;AAAA,YACvB,MAAM;AAAA,YACN,SAAS,EAAE,KAAK;AAAA,UAAA,CACjB;AAAA,QACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAaA,gBAAgB,CAAC,SAAgC;AACxC,iBAAA,KAAK,KAAK,QAAQ;AAAA,YACvB,MAAM;AAAA,YACN,SAAS,EAAE,KAAK;AAAA,UAAA,CACjB;AAAA,QACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,UAAU,CAAC,UAAwC;AAC1C,iBAAA,KAAK,KAAK,QAAQ;AAAA,YACvB,MAAM;AAAA,YACN,SAAS,EAAE,MAAM;AAAA,UAAA,CAClB;AAAA,QACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAWA,SAAS,CAAC,SAAsC;AACvC,iBAAA,KAAK,KAAK,QAAQ;AAAA,YACvB,MAAM;AAAA,YACN,SAAS,EAAE,KAAK;AAAA,UAAA,CACjB;AAAA,QACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAUA,aAAa,CAAC,UAAmB,SAAwB;AAChD,iBAAA,KAAK,KAAK,QAAQ;AAAA,YACvB,MAAM;AAAA,YACN,SAAS,EAAE,QAAQ;AAAA,UAAA,CACpB;AAAA,QACH;AAAA,MAAA;AAGF,WAAO,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASf,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAcR,QAAQ,MAA8B;AAC7B,iBAAA,KAAK,KACT,QAAyB;AAAA,YACxB,MAAM;AAAA,YACN,SAAS,CAAC;AAAA,UAAA,CACX,EACA,KAAK,CAAC,SAAS,MAAM,OAAO,IAAI;AAAA,QACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAWA,QAAQ,CAAC,OAAe,QAAuB;AAC7C,cAAI,OAAO,SAAS,YAAY,CAAC,KAAK,WAAW,GAAG,GAAG;AAC/C,kBAAA,IAAI,MAAM,6DAA6D,OAAO;AAAA,UACtF;AACO,iBAAA,KAAK,KAAK,QAAc;AAAA,YAC7B,MAAM;AAAA,YACN,SAAS,EAAE,KAAK;AAAA,UAAA,CACjB;AAAA,QACH;AAAA,MAAA;AA5KK,WAAA,OAAO,IAAI,IAAI,IAAI;AAEjB,aAAA,eAAe,KAAK,SAAS,UAAU;AAAA,QAC5C,OAAO,OAAO,OAAO,kBAAkB,WAAW,OAAO,gBAAgB;AAAA,QACzE,UAAU;AAAA,MAAA,CACX;AAAA,IACH;AAAA;AAAA;AAAA;AAAA,IAKA,YAAY,MAA6B;AACvC,YAAM,WAAW,CAAC,QAAa,QAAQ,QAAQ,OAAO,QAAQ;AAC1D,UAAA,CAAC,SAAS,IAAI,KAAK,CAAC,SAAS,KAAK,MAAM,GAAG;AACvC,cAAA,IAAI,MAAM,4DAA4D;AAAA,iBACnE,CAAC,MAAM,QAAQ,KAAK,OAAO,GAAG;AACjC,cAAA,IAAI,MAAM,4DAA4D;AAAA,MAC9E;AAEO,aAAA,KAAK,KAAK,QAAQ;AAAA,QACvB,MAAM;AAAA,QACN,SAAS;AAAA,MAAA,CACV;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,kBAAuD;AAC9C,aAAA,KAAK,KAAK,QAA6B;AAAA,QAC5C,MAAM;AAAA,QACN,SAAS,CAAC;AAAA,MAAA,CACX;AAAA,IACH;AAAA;AAAA;AAAA;AAAA,IAKA,gBAA8C;AACrC,aAAA,KAAK,KAAK,QAAsB;AAAA,QACrC,MAAM;AAAA,QACN,SAAS,CAAC;AAAA,MAAA,CACX;AAAA,IACH;AAAA,EAgIF;AC9LA,QAAM,cAA4B,CAAA;AAE3B,QAAM,WAAW;AAAA,IAMtB,YAAY,SAA4B;AACtC,WAAK,KAAK;AACV,WAAK,UAAU;AACf,WAAK,UAAU,IAAI,QAAY,CAAC,SAAS,WAAW;AAClD,cAAM,mBAAmB,CAAC,EAAE,MAAM,YAA0B;AAC1D,cAAI,MAAM,WAAW,sBAAsB,KAAK,OAAO,KAAK,IAAI;AAC9D,iBAAK,KAAK,IAAI,GAAG,MAAM,CAAC,GAAG,KAAK,OAAO;AACvC,oBAAQ,KAAK,EAAE;AACP;UACV;AAAA,QAAA;AAGF,cAAM,YAAY,MAAM;AACtB,eAAK,QAAQ,eAAe;AAAA,YAC1B;AAAA,cACE,QAAQ;AAAA,cACR,IAAI,KAAK;AAAA,YACX;AAAA,YACA;AAAA,UAAA;AAAA,QACF;AAIF,iBAAS,UAAU;AACjB,iBAAO,cAAc,QAAQ;AACtB,iBAAA,oBAAoB,WAAW,gBAAgB;AAAA,QACxD;AAGO,eAAA,iBAAiB,WAAW,gBAAgB;AAEzC;AAEV,YAAI,WAAW;AACT,cAAA,WAAW,OAAO,YAAY,MAAM;AAGxC,cAAI,KAAK,IAAI;AACH;AACR;AAAA,UACF;AAGA,cAAI,YAAY,sBAAsB;AAC5B;AACR,mBAAO,kEAAkE;AAE7D,wBAAA,QAAQ,CAAC,YAAY,UAAU;AACrC,kBAAA,WAAW,OAAO,KAAK,IAAI;AACjB,4BAAA,OAAO,OAAO,CAAC;AAAA,cAC7B;AAAA,YAAA,CACD;AACD;AAAA,UACF;AAEA;AACU;WACT,gBAAgB;AAAA,MAAA,CACpB;AAED,kBAAY,KAAK,IAAI;AAAA,IACvB;AAAA,EACF;AAGa,QAAA,gBAAgB,CAAC,eAA2C;AACjE,UAAA,MAAM,sBAAsB,UAAU,YAAY;AACjD,WAAA,YAAY,KAAK,CAAC,MAAM,EAAE,GAAG,MAAM,UAAU,KAAK;AAAA,EAC3D;AC5EA,WAAS,kBAAkB,MAAc,OAAe;AAChD,UAAA,QAAQ,SAAS,cAAc,OAAO;AAC5C,UAAM,OAAO;AACb,UAAM,OAAO;AACb,UAAM,QAAQ;AACP,WAAA;AAAA,EACT;AAQA,WAAS,eAAe,MAAc;AACpC,WAAO,KAAK,QAAQ,OAAO,KAAK,EAAE,QAAQ,OAAO,KAAK;AAAA,EACxD;AAEO,WAAS,kBAAkB;AAAA,IAChC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,GAAY;AACV,QAAI,CAAC,kBAAkB,SAAS,QAAQ,GAAG;AACnC,YAAA,QAAQ,kBAAkB,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE,KAAK,IAAI;AACtD,cAAA,KAAK,gDAAgD,OAAO;AAAA,IACtE;AAEA,UAAM,SAA6B,CAAA;AACnC,UAAM,WAAW,CAAC,MAAc,OAAe,eAAe,OAAO;AAC5D,aAAA,KAAK,kBAAkB,MAAM,OAAO,UAAU,WAAW,QAAQ,YAAY,CAAC;AAAA,IAAA;AAGvF,aAAS,kBAAkB,KAAK;AAChC,QAAI,OAAO,gBAAgB,YAAY,YAAY,SAAS,GAAG;AAC7D,eAAS,wBAAwB,WAAW;AAAA,IAC9C;AACS,aAAA,qBAAqB,UAAU,YAAY;AAEpD,QAAI,cAAc;AAChB,UAAI,aAAa,QAAQ;AACf,gBAAA;AAAA,UACN;AAAA,QAAA;AAAA,MACF,OACK;AACL,iBAAS,yBAAyB,KAAK,UAAU,YAAY,CAAC;AAAA,MAChE;AAAA,IACF;AAEA,QAAI,UAAU;AACZ,eAAS,qBAAqB,KAAK,UAAU,QAAQ,CAAC;AAAA,IACxD;AAEO,WAAA,QAAQ,KAAK,EAAE,QAAQ,CAAC,CAAC,MAAM,QAAQ,MAAM;AAClD,eAAS,kBAAkB,eAAe,IAAI,MAAM,QAAQ;AAAA,IAAA,CAC7D;AAEK,UAAA,OAAO,SAAS,cAAc,MAAM;AAC1C,SAAK,SAAS;AACT,SAAA,aAAa,SAAS,yBAAyB;AAC/C,SAAA,OAAO,GAAG,MAAM;AACd,WAAA;AAAA,EACT;AAEgB,WAAA,uBAAuB,SAAkB,SAAwB;AACzE,UAAA,OAAO,kBAAkB,OAAO;AACjC,SAAA,SAAS,SAAS,QAAQ,OAAO;AACtC,SAAK,KAAK;AAEV,UAAM,OAAO;AAAA;AAAA;AAAA;AAAA,IAIX,KAAK;AAAA,qCAC4B,KAAK;AAAA;AAAA;AAIjC,WAAA;AAAA,EACT;AAEgB,WAAA,eAAe,SAAkB,SAAuB;AAChE,UAAA,OAAO,kBAAkB,OAAO;AACjC,SAAA,SAAS,QAAQ,QAAQ,OAAO;AAChC,SAAA,SAAS,WAAW,OAAO;AAEvB,aAAA,KAAK,YAAY,IAAI;AAC9B,SAAK,OAAO;AACH,aAAA,KAAK,YAAY,IAAI;AAAA,EAChC;ACvFO,WAAS,QAAQ,SAAyC;AAC3D,QAAA,CAAC,SAAS,eAAe;AACpB,aAAA,QAAQ,OAAO,oCAAoC;AAAA,IAC5D;AACA,UAAM,aAAa,cAAc,OAAO,KAAK,IAAI,WAAW,OAAO;AACnE,WAAO,WAAW;AAAA,EACpB;AAKgB,WAAA,YAAY,SAAkB,SAAuB;AACnE,mBAAe,SAAS,OAAO;AAAA,EACjC;AAKgB,WAAA,cAAc,WAAmB,SAAuB;AACtE,UAAM,MAAM,QAAQ,SAAS,aAAa,OAAO;AAC3C,UAAA,SAAS,WAAW,OAAO;AAC1B,WAAA,KAAK,KAAK,MAAM;AAAA,EACzB;AAUgB,WAAA,kBAAkB,UAAkB,SAAuB;AACzE,UAAM,MAAM,QAAQ,WAAW,YAAY,OAAO;AAC5C,UAAA,SAAS,WAAW,OAAO;AAC1B,WAAA,KAAK,KAAK,MAAM;AAAA,EACzB;AAOgB,WAAA,aACd,aACA,SACA,SACa;AACP,UAAA,UAAU,YAAY,WAAW;AACjC,UAAA,OAAO,uBAAuB,SAAS,OAAO;AAC9C,UAAA,QAAQ,SAAS,cAAc,QAAQ;AAE7B,oBAAA,SAAS,OAAO,OAAO;AAGjC,UAAA,iBAAiB,MAAM,IAAI;AAEjC,WAAO,QAAQ,KAAK;AAAA,EACtB;AAOgB,WAAA,eACd,aACA,WACA,SACa;AACP,UAAA,UAAU,YAAY,WAAW;AACjC,UAAA,QAAQ,SAAS,cAAc,QAAQ;AAC7C,UAAM,MAAM,SAAS,SAAS,aAAa,OAAO;AAElC,oBAAA,SAAS,OAAO,OAAO;AAEvC,WAAO,QAAQ,KAAK;AAAA,EACtB;AAOgB,WAAA,mBACd,aACA,UACA,SACa;AACP,UAAA,UAAU,YAAY,WAAW;AACjC,UAAA,QAAQ,SAAS,cAAc,QAAQ;AAC7C,UAAM,MAAM,SAAS,WAAW,YAAY,OAAO;AAEnC,oBAAA,SAAS,OAAO,OAAO;AAEvC,WAAO,QAAQ,KAAK;AAAA,EACtB;AC9EA,QAAM,gBAAgB;AAAA,IACpB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;;;"}