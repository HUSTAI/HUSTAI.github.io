{"version":3,"file":"index.js","sources":["../../src/node/inject.ts","../../src/node/utils.ts","../../src/node/prepare.ts","../../src/node/plugin.ts","../../src/node/use.ts"],"sourcesContent":["import type { ViteBundlerOptions } from \"@vuepress/bundler-vite\";\nimport type {\n  LoaderOptions,\n  WebpackBundlerOptions,\n} from \"@vuepress/bundler-webpack\";\nimport type { App } from \"@vuepress/core\";\nimport {\n  getBundlerName,\n  isFunction,\n  isString,\n  mergeViteConfig,\n} from \"vuepress-shared/node\";\n\ntype LoaderContext = Exclude<\n  LoaderOptions[\"additionalData\"],\n  string | undefined\n> extends (content: string, loaderContext: infer T) => string\n  ? T\n  : never;\n\n/**\n * Use \"additionalData\" to make `${id}-config` available in scss\n *\n * @param config VuePress Bundler config\n * @param app VuePress Node App\n * @param id Module id\n */\nexport const injectConfigModule = (\n  config: unknown,\n  app: App,\n  id: string\n): void => {\n  const bundlerName = getBundlerName(app);\n\n  // for vite\n  if (bundlerName === \"vite\") {\n    const viteBundlerConfig = <ViteBundlerOptions>config;\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const originalAdditionalData:\n      | string\n      | ((source: string, file: string) => string | Promise<string>)\n      | undefined =\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      viteBundlerConfig.viteOptions?.css?.preprocessorOptions?.[\"scss\"]\n        .additionalData;\n\n    // eslint-disable-next-line\n    viteBundlerConfig.viteOptions = mergeViteConfig(\n      viteBundlerConfig.viteOptions || {},\n      {\n        css: {\n          preprocessorOptions: {\n            scss: {\n              charset: false,\n              additionalData: async (\n                source: string,\n                file: string\n              ): Promise<string> => {\n                const originalContent = isString(originalAdditionalData)\n                  ? `${originalAdditionalData}${source}`\n                  : isFunction(originalAdditionalData)\n                  ? await originalAdditionalData(source, file)\n                  : source;\n\n                return originalContent.match(\n                  new RegExp(`@use\\\\s+[\"']@sass-palette\\\\/${id}-config[\"'];`)\n                )\n                  ? originalContent\n                  : `@use \"@sass-palette/${id}-config\";\\n${originalContent}`;\n              },\n            },\n          },\n        },\n      }\n    );\n  }\n\n  // for webpack\n  else if (bundlerName === \"webpack\") {\n    const webpackBundlerConfig = <WebpackBundlerOptions>config;\n\n    if (!webpackBundlerConfig.scss) webpackBundlerConfig.scss = {};\n\n    const { additionalData } = webpackBundlerConfig.scss;\n\n    const additionalDataHandler = (\n      content: string,\n      loaderContext: LoaderContext\n    ): string => {\n      const originalContent = isString(additionalData)\n        ? `${additionalData}${content}`\n        : isFunction(additionalData)\n        ? additionalData(content, loaderContext)\n        : content;\n\n      return originalContent.match(\n        new RegExp(`@use\\\\s+([\"'])@sass-palette\\\\/${id}-config\\\\1;`)\n      )\n        ? originalContent\n        : `@use \"@sass-palette/${id}-config\";\\n${originalContent}`;\n    };\n\n    webpackBundlerConfig.scss.additionalData = additionalDataHandler;\n  }\n};\n","import { fs, getDirname, path } from \"@vuepress/utils\";\nimport { Logger } from \"vuepress-shared/node\";\n\nconst __dirname = getDirname(import.meta.url);\n\nexport const EMPTY_FILE = path.resolve(__dirname, \"../../styles/empty.scss\");\n\nexport const PLUGIN_NAME = \"vuepress-plugin-sass-palette\";\n\nexport const logger = new Logger(PLUGIN_NAME);\n\nexport const getPath = (path: string): string =>\n  fs.pathExistsSync(path) ? path : EMPTY_FILE;\n","import type { App } from \"@vuepress/core\";\n\nimport { getPath } from \"./utils.js\";\n\nexport const prepareConfigFile = (app: App, id: string): Promise<string> =>\n  app.writeTemp(\n    `sass-palette/load-${id}.js`,\n    `\\\nimport \"@sass-palette/${id}-inject\";\nexport default {};\n`\n  );\n\nexport const prepareInjectSass = (app: App, id: string): Promise<string> =>\n  app.writeTemp(\n    `sass-palette/${id}-inject.scss`,\n    `\\\n@use \"sass:meta\";\n\n@use \"@sass-palette/helper\";\n@use \"@sass-palette/${id}-palette\";\n\n$palette-variables: meta.module-variables(\"${id}-palette\");\n${\n  app.env.isDebug\n    ? `\n@debug \"${id} palette variables: #{meta.inspect($palette-variables)}\";\n@debug \"${id} config variables: #{meta.inspect(meta.module-variables(\"${id}-config\"))}\";\n`\n    : \"\"\n}\n\n@if meta.global-variable-exists(\"dark-selector\", $module: \"${id}-config\") {\n  @include helper.inject($palette-variables, ${id}-config.$dark-selector);\n} @else {\n  @include helper.inject($palette-variables);\n}\n`\n  );\n\nexport interface PrepareConfigOptions {\n  id: string;\n  defaultConfig: string;\n  defaultPalette: string;\n  generator: string;\n  userConfig: string;\n  userPalette: string;\n}\n\nexport const prepareConfigSass = (\n  app: App,\n  {\n    id,\n    defaultConfig,\n    defaultPalette,\n    generator,\n    userConfig,\n    userPalette,\n  }: PrepareConfigOptions\n): Promise<string> =>\n  app.writeTemp(\n    `sass-palette/${id}-config.scss`,\n    `\\\n@import \"file:///${getPath(defaultPalette)}\";\n@import \"file:///${getPath(defaultConfig)}\";\n@import \"file:///${getPath(userPalette)}\";\n@import \"file:///${getPath(userConfig)}\";\n@import \"file:///${getPath(generator)}\";\n`\n  );\n\nexport interface PreparePaletteOptions {\n  id: string;\n  defaultPalette: string;\n  generator: string;\n  userPalette: string;\n}\n\nexport const preparePaletteSass = (\n  app: App,\n  { id, defaultPalette, generator, userPalette }: PreparePaletteOptions\n): Promise<string> =>\n  app.writeTemp(\n    `sass-palette/${id}-palette.scss`,\n    `\\\n@import \"file:///${getPath(defaultPalette)}\";\n@import \"file:///${getPath(userPalette)}\";\n@import \"file:///${getPath(generator)}\";\n`\n  );\n\nexport interface PrepareStyleOptions {\n  id: string;\n  userStyle: string | null;\n}\n\nexport const prepareStyleSass = (\n  app: App,\n  { id, userStyle }: PrepareStyleOptions\n): Promise<string | null> =>\n  userStyle\n    ? app.writeTemp(\n        `sass-palette/${id}-style.scss`,\n        `\\\n@forward \"file:///${getPath(userStyle)}\";\n`\n      )\n    : Promise.resolve(null);\n","import type { PluginFunction } from \"@vuepress/core\";\nimport { getDirname, path } from \"@vuepress/utils\";\nimport { watch } from \"chokidar\";\nimport { checkVersion } from \"vuepress-shared/node\";\n\nimport { injectConfigModule } from \"./inject.js\";\nimport type { SassPaletteOptions } from \"./options.js\";\nimport {\n  prepareConfigFile,\n  prepareConfigSass,\n  prepareInjectSass,\n  preparePaletteSass,\n  prepareStyleSass,\n} from \"./prepare.js\";\nimport { PLUGIN_NAME, logger } from \"./utils.js\";\n\nconst __dirname = getDirname(import.meta.url);\n\nexport const sassPalettePlugin =\n  (options: SassPaletteOptions): PluginFunction =>\n  (app) => {\n    checkVersion(app, PLUGIN_NAME, \"2.0.0-beta.63\");\n\n    if (app.env.isDebug) logger.info(\"Options:\", options);\n\n    const {\n      id = \"hope\",\n      config = `.vuepress/styles/${id}-config.scss`,\n      defaultConfig = path.resolve(\n        __dirname,\n        \"../../styles/default/config.scss\"\n      ),\n      palette = `.vuepress/styles/${id}-palette.scss`,\n      defaultPalette = path.resolve(\n        __dirname,\n        \"../../styles/default/palette.scss\"\n      ),\n      generator = path.resolve(__dirname, \"../../styles/empty.scss\"),\n      style = \"\",\n    } = options;\n\n    const userConfig = app.dir.source(config);\n    const userPalette = app.dir.source(palette);\n    const userStyle = style ? app.dir.source(style) : null;\n\n    return {\n      name: PLUGIN_NAME,\n\n      multiple: true,\n\n      id,\n\n      alias: {\n        [`@sass-palette/helper`]: path.resolve(\n          __dirname,\n          \"../../styles/helper.scss\"\n        ),\n        [`@sass-palette/${id}-config`]: app.dir.temp(\n          `sass-palette/${id}-config.scss`\n        ),\n        [`@sass-palette/${id}-inject`]: app.dir.temp(\n          `sass-palette/${id}-inject.scss`\n        ),\n        [`@sass-palette/${id}-palette`]: app.dir.temp(\n          `sass-palette/${id}-palette.scss`\n        ),\n        ...(style\n          ? {\n              [`@sass-palette/${id}-style`]: app.dir.temp(\n                `sass-palette/${id}-style.scss`\n              ),\n            }\n          : {}),\n      },\n\n      extendsBundlerOptions: (config: unknown, app): void => {\n        injectConfigModule(config, app, id);\n      },\n\n      onInitialized: (): Promise<void> => {\n        return Promise.all([\n          prepareInjectSass(app, id),\n\n          prepareConfigSass(app, {\n            id,\n            defaultConfig,\n            defaultPalette,\n            generator,\n            userConfig,\n            userPalette,\n          }),\n\n          preparePaletteSass(app, {\n            id,\n            defaultPalette,\n            generator,\n            userPalette,\n          }),\n\n          prepareStyleSass(app, { id, userStyle }),\n        ]).then(() => {\n          if (app.env.isDebug) logger.info(`Style file for ${id} generated`);\n        });\n      },\n\n      onWatched: (app, watchers): void => {\n        const configWatcher = watch(userConfig, {\n          cwd: app.dir.source(),\n          ignoreInitial: true,\n        });\n\n        const updateConfig = (): Promise<void> =>\n          prepareConfigSass(app, {\n            id,\n            defaultConfig,\n            defaultPalette,\n            generator,\n            userConfig,\n            userPalette,\n          }).then(() => {\n            if (app.env.isDebug) logger.info(`Style file for ${id} updated`);\n          });\n\n        configWatcher.on(\"add\", () => {\n          void updateConfig();\n        });\n        configWatcher.on(\"unlink\", () => {\n          void updateConfig();\n        });\n\n        watchers.push(configWatcher);\n\n        const paletteWatcher = watch(userPalette, {\n          cwd: app.dir.source(),\n          ignoreInitial: true,\n        });\n\n        const updatePalette = (): Promise<void> =>\n          Promise.all([\n            prepareConfigSass(app, {\n              id,\n              defaultConfig,\n              defaultPalette,\n              generator,\n              userConfig,\n              userPalette,\n            }),\n\n            preparePaletteSass(app, {\n              id,\n              defaultPalette,\n              generator,\n              userPalette,\n            }),\n          ]).then(() => {\n            if (app.env.isDebug) logger.info(`Style file for ${id} updated`);\n          });\n\n        paletteWatcher.on(\"add\", () => {\n          void updatePalette();\n        });\n        paletteWatcher.on(\"unlink\", () => {\n          void updatePalette();\n        });\n\n        watchers.push(paletteWatcher);\n\n        if (userStyle) {\n          const styleWatcher = watch(userStyle, {\n            cwd: app.dir.source(),\n            ignoreInitial: true,\n          });\n\n          const updateStyle = (): Promise<void> =>\n            prepareStyleSass(app, { id, userStyle }).then(() => {\n              if (app.env.isDebug) logger.info(`Style file for ${id} updated`);\n            });\n\n          styleWatcher.on(\"add\", () => {\n            void updateStyle();\n          });\n          styleWatcher.on(\"unlink\", () => {\n            void updateStyle();\n          });\n          watchers.push(styleWatcher);\n        }\n      },\n\n      clientConfigFile: (app) => prepareConfigFile(app, id),\n    };\n  };\n","import type { App, PluginObject } from \"@vuepress/core\";\n\nimport type { SassPaletteOptions } from \"./options.js\";\nimport { sassPalettePlugin } from \"./plugin.js\";\n\nexport const useSassPalettePlugin = (\n  app: App,\n  options: SassPaletteOptions\n): void => {\n  const { plugins } = app.pluginApi;\n\n  if (\n    plugins\n      .filter<PluginObject & { id: string }>(\n        (plugin): plugin is PluginObject & { id: string } =>\n          plugin.name === `vuepress-plugin-sass-palette`\n      )\n      .every((plugin) => plugin.id !== options.id)\n  )\n    app.use(sassPalettePlugin(options));\n};\n\nexport const removePalettePlugin = (app: App, id: string): void => {\n  const { plugins } = app.pluginApi;\n\n  const index = plugins\n    .filter<PluginObject & { id: string }>(\n      (plugin): plugin is PluginObject & { id: string } =>\n        plugin.name === `vuepress-plugin-sass-palette`\n    )\n    .findIndex((plugin) => plugin.id === id);\n\n  if (index !== -1) app.pluginApi.plugins.splice(index, 1);\n};\n"],"names":["injectConfigModule","config","app","id","_a","_b","_c","bundlerName","getBundlerName","viteBundlerConfig","originalAdditionalData","mergeViteConfig","source","file","originalContent","isString","isFunction","webpackBundlerConfig","additionalData","additionalDataHandler","content","loaderContext","__dirname","getDirname","EMPTY_FILE","path","PLUGIN_NAME","logger","Logger","getPath","fs","prepareConfigFile","prepareInjectSass","prepareConfigSass","defaultConfig","defaultPalette","generator","userConfig","userPalette","preparePaletteSass","prepareStyleSass","userStyle","sassPalettePlugin","options","checkVersion","palette","style","watchers","configWatcher","watch","updateConfig","paletteWatcher","updatePalette","styleWatcher","updateStyle","useSassPalettePlugin","plugins","plugin","removePalettePlugin","index"],"mappings":"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"}