import type { ServerHTMLElement } from '../element/create-server-element';
export declare function isDOMNode(node: any): node is Node;
export declare function isDOMElement(node: any): node is Element;
export declare function isDOMFragment(node: any): node is DocumentFragment;
export declare function createFragment(): DocumentFragment;
export declare function createComment(data: string): Comment;
/**
 * Sets or removes the given attribute `value`. Falsy values except `''` and `0` will remove
 * the attribute. If the given `value` is a function/signal, the attribute will be updated as
 * the value updates.
 *
 * This function is safe to use on the server.
 *
 * @see {@link https://developer.mozilla.org/en-US/docs/Glossary/Falsy}
 */
export declare function setAttribute(host: Element | ServerHTMLElement, name: string, value: unknown): void;
/**
 * Sets or removes the given style `value`. Falsy values will remove the style. If the
 * given `value` is a function/signal, the style will be updated as the value updates.
 *
 * This function is safe to use on the server.
 *
 * @see {@link https://developer.mozilla.org/en-US/docs/Glossary/Falsy}
 */
export declare function setStyle(host: HTMLElement | ServerHTMLElement, property: string, value: unknown): void;
/**
 * Toggles the given class `name`. Falsy values will remove the class from the list. If the
 * given `value` is a function/signal, the class will be toggled as the value updates.
 *
 * This function is safe to use on the server.
 *
 * @see {@link https://developer.mozilla.org/en-US/docs/Glossary/Falsy}
 */
export declare function toggleClass(host: Element | ServerHTMLElement, name: string, value: unknown): void;
/**
 * Returns elements assigned to the given slot in the shadow root. Filters out all nodes
 * which are not an element.
 *
 * @param el - The element containing the slot.
 * @param name - The name of the slot (optional).
 */
export declare function getSlottedChildren(el: HTMLElement, name?: string): Element[];
export declare function attachDeclarativeShadowDOM(element: HTMLElement): void;
