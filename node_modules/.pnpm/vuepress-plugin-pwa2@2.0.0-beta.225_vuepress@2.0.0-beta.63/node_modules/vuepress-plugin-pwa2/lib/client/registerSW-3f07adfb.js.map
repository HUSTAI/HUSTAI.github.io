{"version":3,"file":"registerSW-3f07adfb.js","sources":["../../src/client/utils/forceUpdate.ts","../../src/client/utils/registerSW.ts"],"sourcesContent":["/**\n * Force update page content\n *\n * 强制更新页面内容\n */\nexport const forceUpdate = (): void => {\n  void navigator.serviceWorker.getRegistration().then((registration) => {\n    // check whether a valid service worker is active\n    if (registration && registration.active)\n      registration?.addEventListener(\"updatefound\", () => {\n        // force refresh\n        // @ts-ignore\n        window.location.reload(true);\n      });\n  });\n};\n","import type { Hooks } from \"register-service-worker\";\n\n/**\n * Register serviceWorker under `serviceWorkerPath`\n *\n * @param serviceWorkerPath Service Worker path\n * @param hooks Service worker hooks\n * @param showStatus Whether to show status in console\n *\n * 在 `serviceWorkerPath` 下注册 Service Worker\n *\n * @param serviceWorkerPath Service Worker 路径\n * @param hooks Service Worker 钩子\n * @param showStatus 是否在控制台显示状态\n */\nexport const registerSW = async (\n  serviceWorkerPath: string,\n  hooks: Hooks = {},\n  showStatus = true\n): Promise<void> => {\n  const { register } = await import(\n    /* webpackChunkName: \"register-service-worker\" */ \"register-service-worker\"\n  );\n\n  // Register service worker\n  register(serviceWorkerPath, {\n    ready(registration) {\n      if (showStatus) console.info(\"[Service Worker]: active\");\n      hooks.ready?.(registration);\n    },\n\n    registered(registration) {\n      if (showStatus) console.log(\"[Service Worker]: registered\");\n      hooks.registered?.(registration);\n    },\n\n    cached(registration) {\n      if (showStatus) console.log(\"[Service Worker]: cached\");\n      hooks.cached?.(registration);\n    },\n\n    async updatefound(registration) {\n      if (await navigator.serviceWorker.getRegistration()) {\n        if (showStatus) console.log(\"[Service Worker]: update found\");\n        hooks.updatefound?.(registration);\n      }\n    },\n\n    updated(registration) {\n      if (showStatus) console.log(\"[Service Worker]: updated\");\n      hooks.updated?.(registration);\n    },\n\n    offline() {\n      if (showStatus) console.log(\"[Service Worker]: offline\");\n      hooks.offline?.();\n    },\n\n    error(err) {\n      if (showStatus) console.error(\"[Service Worker]: \", err);\n      hooks.error?.(err);\n    },\n  });\n};\n"],"names":["forceUpdate","registration","registerSW","serviceWorkerPath","hooks","showStatus","register","_a","err"],"mappings":"AAKa,MAAAA,EAAc,IAAY,CAChC,UAAU,cAAc,gBAAgB,EAAE,KAAMC,GAAiB,CAEhEA,GAAgBA,EAAa,SAC/BA,GAAA,MAAAA,EAAc,iBAAiB,cAAe,IAAM,CAGlD,OAAO,SAAS,OAAO,EAAI,CAC7B,CACJ,EAAA,CAAC,CACH,ECAaC,EAAa,MACxBC,EACAC,EAAe,GACfC,EAAa,KACK,CAClB,KAAM,CAAE,SAAAC,CAAS,EAAI,aAC+B,yBACpD,EAGAA,EAASH,EAAmB,CAC1B,MAAMF,EAAc,CA1BxB,IAAAM,EA2BUF,GAAY,QAAQ,KAAK,0BAA0B,GACvDE,EAAAH,EAAM,QAAN,MAAAG,EAAA,KAAAH,EAAcH,CAAAA,CAChB,EAEA,WAAWA,EAAc,CA/B7B,IAAAM,EAgCUF,GAAY,QAAQ,IAAI,8BAA8B,GAC1DE,EAAAH,EAAM,aAAN,MAAAG,EAAA,KAAAH,EAAmBH,CACrB,CAAA,EAEA,OAAOA,EAAc,CApCzB,IAAAM,EAqCUF,GAAY,QAAQ,IAAI,0BAA0B,GACtDE,EAAAH,EAAM,SAAN,MAAAG,EAAA,KAAAH,EAAeH,CAAAA,CACjB,EAEA,MAAM,YAAYA,EAAc,CAzCpC,IAAAM,EA0CU,MAAM,UAAU,cAAc,gBAC5BF,IAAAA,GAAY,QAAQ,IAAI,gCAAgC,GAC5DE,EAAAH,EAAM,cAAN,MAAAG,EAAA,KAAAH,EAAoBH,CAAAA,EAExB,EAEA,QAAQA,EAAc,CAhD1B,IAAAM,EAiDUF,GAAY,QAAQ,IAAI,2BAA2B,GACvDE,EAAAH,EAAM,UAAN,MAAAG,EAAA,KAAAH,EAAgBH,CAAAA,CAClB,EAEA,SAAU,CArDd,IAAAM,EAsDUF,GAAY,QAAQ,IAAI,2BAA2B,GACvDE,EAAAH,EAAM,UAAN,MAAAG,EAAA,KAAAH,CAAAA,CACF,EAEA,MAAMI,EAAK,CA1Df,IAAAD,EA2DUF,GAAY,QAAQ,MAAM,qBAAsBG,CAAG,GACvDD,EAAAH,EAAM,QAAN,MAAAG,EAAA,KAAAH,EAAcI,CAChB,CAAA,CACF,CAAC,CACH"}