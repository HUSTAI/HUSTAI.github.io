{"version":3,"file":"Notice.js","sources":["../../../src/client/components/NoticeItem.ts","../../../src/client/components/Notice.ts"],"sourcesContent":["import type { PropType, VNode } from \"vue\";\nimport {\n  TransitionGroup,\n  computed,\n  defineComponent,\n  h,\n  onMounted,\n  ref,\n} from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport { isAbsoluteUrl, isLinkHttp, startsWith } from \"vuepress-shared/client\";\n\nimport { CloseIcon } from \"./icons.js\";\nimport type { NoticeActionOption } from \"../../shared/index.js\";\n\nimport \"../styles/notice.scss\";\n\nexport default defineComponent({\n  name: \"NoticeItem\",\n\n  props: {\n    /**\n     * Notice path\n     *\n     * 通知路径\n     */\n    path: {\n      type: String,\n      default: \"\",\n    },\n\n    /**\n     * Notice match RegExp\n     *\n     * 通知路径匹配\n     */\n    match: {\n      type: String,\n      default: \"\",\n    },\n\n    /**\n     * Notice title\n     *\n     * 通知标题\n     */\n    title: {\n      type: String,\n      required: true,\n    },\n\n    /**\n     * Notice content\n     *\n     * 通知内容\n     */\n    content: {\n      type: String,\n      required: true,\n    },\n\n    /**\n     * Notice footer\n     *\n     * 通知操作\n     */\n    actions: {\n      type: Array as PropType<NoticeActionOption[]>,\n      default: (): NoticeActionOption[] => [],\n    },\n\n    /**\n     * Notice key\n     *\n     * 通知 key\n     */\n    noticeKey: {\n      type: String,\n      default: \"\",\n    },\n\n    /**\n     * Whether show notice only showOnce\n     *\n     * 是否仅展示一次通知\n     */\n    showOnce: Boolean,\n\n    /**\n     * Whether the notice shall be confirmed\n     *\n     * 通知是否需要确认\n     */\n    confirm: Boolean,\n\n    /**\n     * Whether display notice fullscreen\n     *\n     * 是否全屏显示通知\n     */\n    fullscreen: Boolean,\n  },\n\n  setup(props) {\n    const route = useRoute();\n    const router = useRouter();\n\n    const isVisible = ref(false);\n\n    const key = computed(() =>\n      props.noticeKey\n        ? `notice-${props.noticeKey}`\n        : `${props.title}${props.content}`\n    );\n\n    const isMatched = computed(() =>\n      props.match\n        ? new RegExp(props.match).test(route.path)\n        : startsWith(route.path, props.path)\n    );\n\n    onMounted(() => {\n      const hasBeenClosed = (\n        props.showOnce ? localStorage : sessionStorage\n      ).getItem(key.value);\n\n      isVisible.value = !hasBeenClosed;\n    });\n\n    const close = (): void => {\n      isVisible.value = false;\n      (props.showOnce ? localStorage : sessionStorage).setItem(\n        key.value,\n        \"true\"\n      );\n    };\n\n    const openLink = (link?: string): void => {\n      if (link)\n        if (isAbsoluteUrl(link)) void router.push(link);\n        else if (isLinkHttp(link)) window.open(link);\n\n      close();\n    };\n\n    return (): VNode =>\n      h(TransitionGroup, { name: \"notice-fade\" }, () =>\n        isMatched.value && isVisible.value\n          ? [\n              props.fullscreen\n                ? h(\"div\", {\n                    key: \"mask\",\n                    class: \"vp-notice-mask\",\n                    onClick: () => {\n                      if (!props.confirm) close();\n                    },\n                  })\n                : null,\n              h(\n                \"div\",\n                {\n                  key: \"popup\",\n                  class: [\n                    \"vp-notice-wrapper\",\n                    { fullscreen: props.fullscreen },\n                  ],\n                },\n                [\n                  h(\"header\", { class: \"vp-notice-title\" }, [\n                    props.confirm\n                      ? null\n                      : h(CloseIcon, { onClick: (): void => close() }),\n                    h(\"span\", { innerHTML: props.title }),\n                  ]),\n                  h(\"div\", {\n                    class: \"vp-notice-content\",\n                    innerHTML: props.content,\n                  }),\n                  h(\n                    \"div\",\n                    { class: \"vp-notice-footer\" },\n                    props.actions.map(({ text, link, type = \"\" }) =>\n                      h(\"button\", {\n                        type: \"button\",\n                        class: [\"vp-notice-footer-action\", type],\n                        onClick: () => openLink(link),\n                        innerHTML: text,\n                      })\n                    )\n                  ),\n                ]\n              ),\n            ]\n          : []\n      );\n  },\n});\n","import type { FunctionalComponent, PropType } from \"vue\";\nimport { h } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport { startsWith } from \"vuepress-shared/client\";\n\nimport NoticeItem from \"./NoticeItem.js\";\nimport type { NoticeItemOptions } from \"../../shared/index.js\";\n\nimport \"../styles/notice.scss\";\n\ntype NoticeClientOption = Omit<NoticeItemOptions, \"key\"> & {\n  noticeKey?: string;\n} & ({ path: string } | { match: string });\n\nconst Notice: FunctionalComponent<{\n  config: NoticeClientOption[];\n}> = ({ config }) => {\n  const route = useRoute();\n\n  const item = config.find((item) =>\n    \"match\" in item\n      ? new RegExp(item.match).test(route.path)\n      : startsWith(route.path, item.path)\n  );\n\n  return item ? h(NoticeItem, item) : null;\n};\n\nNotice.displayName = \"Notice\";\nNotice.props = {\n  /**\n   * Notice locales settings\n   *\n   * 通知的多语言设置\n   */\n  config: {\n    type: Array as PropType<NoticeClientOption[]>,\n    required: true,\n  },\n};\n\nexport default Notice;\n"],"names":["defineComponent","props","route","useRoute","router","useRouter","isVisible","ref","key","computed","isMatched","startsWith","onMounted","hasBeenClosed","close","openLink","link","isAbsoluteUrl","isLinkHttp","h","TransitionGroup","CloseIcon","text","type","Notice","config","item","NoticeItem"],"mappings":"2TAiBA,IAAeA,EAAAA,EAAgB,CAC7B,KAAM,aAEN,MAAO,CAML,KAAM,CACJ,KAAM,OACN,QAAS,EACX,EAOA,MAAO,CACL,KAAM,OACN,QAAS,EACX,EAOA,MAAO,CACL,KAAM,OACN,SAAU,EACZ,EAOA,QAAS,CACP,KAAM,OACN,SAAU,EACZ,EAOA,QAAS,CACP,KAAM,MACN,QAAS,IAA4B,CAAA,CACvC,EAOA,UAAW,CACT,KAAM,OACN,QAAS,EACX,EAOA,SAAU,QAOV,QAAS,QAOT,WAAY,OACd,EAEA,MAAMC,EAAO,CACX,MAAMC,EAAQC,IACRC,EAASC,EAAAA,EAETC,EAAYC,EAAI,EAAK,EAErBC,EAAMC,EAAS,IACnBR,EAAM,UACF,UAAUA,EAAM,YAChB,GAAGA,EAAM,QAAQA,EAAM,SAC7B,EAEMS,EAAYD,EAAS,IACzBR,EAAM,MACF,IAAI,OAAOA,EAAM,KAAK,EAAE,KAAKC,EAAM,IAAI,EACvCS,EAAWT,EAAM,KAAMD,EAAM,IAAI,CACvC,EAEAW,EAAU,IAAM,CACd,MAAMC,GACJZ,EAAM,SAAW,aAAe,gBAChC,QAAQO,EAAI,KAAK,EAEnBF,EAAU,MAAQ,CAACO,CACrB,CAAC,EAED,MAAMC,EAAQ,IAAY,CACxBR,EAAU,MAAQ,IACjBL,EAAM,SAAW,aAAe,gBAAgB,QAC/CO,EAAI,MACJ,MACF,CACF,EAEMO,EAAYC,GAAwB,CACpCA,IACEC,EAAcD,CAAI,EAAQZ,EAAO,KAAKY,CAAI,EACrCE,EAAWF,CAAI,GAAG,OAAO,KAAKA,CAAI,GAE7CF,GACF,EAEA,MAAO,IACLK,EAAEC,EAAiB,CAAE,KAAM,aAAc,EAAG,IAC1CV,EAAU,OAASJ,EAAU,MACzB,CACEL,EAAM,WACFkB,EAAE,MAAO,CACP,IAAK,OACL,MAAO,iBACP,QAAS,IAAM,CACRlB,EAAM,SAASa,EACtB,CAAA,CACF,CAAC,EACD,KACJK,EACE,MACA,CACE,IAAK,QACL,MAAO,CACL,oBACA,CAAE,WAAYlB,EAAM,UAAW,CACjC,CACF,EACA,CACEkB,EAAE,SAAU,CAAE,MAAO,iBAAkB,EAAG,CACxClB,EAAM,QACF,KACAkB,EAAEE,EAAW,CAAE,QAAS,IAAYP,GAAQ,CAAC,EACjDK,EAAE,OAAQ,CAAE,UAAWlB,EAAM,KAAM,CAAC,CACtC,CAAC,EACDkB,EAAE,MAAO,CACP,MAAO,oBACP,UAAWlB,EAAM,OACnB,CAAC,EACDkB,EACE,MACA,CAAE,MAAO,kBAAmB,EAC5BlB,EAAM,QAAQ,IAAI,CAAC,CAAE,KAAAqB,EAAM,KAAAN,EAAM,KAAAO,EAAO,EAAG,IACzCJ,EAAE,SAAU,CACV,KAAM,SACN,MAAO,CAAC,0BAA2BI,CAAI,EACvC,QAAS,IAAMR,EAASC,CAAI,EAC5B,UAAWM,CACb,CAAC,CACH,CACF,CACF,CACF,CACF,EACA,CACN,CAAA,CACJ,CACF,CAAC,ECtLD,MAAME,EAED,CAAC,CAAE,OAAAC,CAAO,IAAM,CACnB,MAAMvB,EAAQC,EAAS,EAEjBuB,EAAOD,EAAO,KAAMC,GACxB,UAAWA,EACP,IAAI,OAAOA,EAAK,KAAK,EAAE,KAAKxB,EAAM,IAAI,EACtCS,EAAWT,EAAM,KAAMwB,EAAK,IAAI,CACtC,EAEA,OAAOA,EAAOP,EAAEQ,EAAYD,CAAI,EAAI,IACtC,EAEAF,EAAO,YAAc,SACrBA,EAAO,MAAQ,CAMb,OAAQ,CACN,KAAM,MACN,SAAU,EACZ,CACF"}