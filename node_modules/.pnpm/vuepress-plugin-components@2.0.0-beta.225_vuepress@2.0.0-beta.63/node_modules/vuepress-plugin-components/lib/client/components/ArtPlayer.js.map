{"version":3,"file":"ArtPlayer.js","sources":["../../../src/client/utils/mse.ts","../../../src/client/components/ArtPlayer.ts"],"sourcesContent":["export const SUPPORTED_VIDEO_TYPES = [\n  \"mp4\",\n  \"mp3\",\n  \"webm\",\n  \"ogg\",\n  \"m3u8\",\n  \"hls\",\n  \"ts\",\n  \"flv\",\n  \"mpd\",\n  \"dash\",\n];\n\nexport const getTypeByUrl = (url: string): string =>\n  url?.split(\".\").pop() || \"\";\n\nexport const registerMseDash = async (\n  mediaElement: HTMLMediaElement,\n  src: string,\n  registerDestroy: (destroy: () => void) => void,\n  autoPlay = false,\n  startTime = 0\n): Promise<void> => {\n  const dashjs = (\n    await import(/* webpackChunkName: \"dashjs\" */ \"dashjs/dist/dash.all.min.js\")\n  ).default;\n\n  if (dashjs.supportsMediaSource()) {\n    const dashPlayer = dashjs.MediaPlayer().create();\n\n    dashPlayer.initialize(mediaElement, src, autoPlay, startTime);\n\n    registerDestroy(() => dashPlayer.destroy());\n  }\n};\n\nexport const registerMseFlv = async (\n  mediaElement: HTMLMediaElement,\n  src: string,\n  registerDestroy: (destroy: () => void) => void\n): Promise<void> => {\n  const mpegts = (\n    await import(/* webpackChunkName: \"mpegts.js\" */ \"mpegts.js/dist/mpegts.js\")\n  ).default;\n\n  if (mpegts.isSupported()) {\n    const flvPlayer = mpegts.createPlayer({\n      type: \"flv\",\n      url: src,\n    });\n\n    flvPlayer.attachMediaElement(mediaElement);\n    flvPlayer.load();\n\n    registerDestroy(() => flvPlayer.destroy());\n  }\n};\n\nexport const registerMseHls = async (\n  mediaElement: HTMLMediaElement,\n  src: string,\n  registerDestroy: (destroy: () => void) => void\n): Promise<void> => {\n  const hls = (\n    await import(/* webpackChunkName: \"hls.js\" */ \"hls.js/dist/hls.min.js\")\n  ).default;\n\n  if (\n    mediaElement.canPlayType(\"application/x-mpegURL\") ||\n    mediaElement.canPlayType(\"application/vnd.apple.mpegURL\")\n  ) {\n    mediaElement.src = src;\n  } else if (hls.isSupported()) {\n    const hlsInstance = new hls();\n\n    hlsInstance.attachMedia(mediaElement);\n    hlsInstance.on(hls.Events.MEDIA_ATTACHED, function () {\n      hlsInstance.loadSource(src);\n    });\n\n    registerDestroy(() => hlsInstance.destroy());\n  }\n};\n","/* eslint-disable vue/no-unused-properties */\nimport { usePageLang } from \"@vuepress/client\";\nimport type Artplayer from \"artplayer\";\nimport type { Option as ArtPlayerInitOptions } from \"artplayer/types/option.js\";\nimport type { PropType, VNode } from \"vue\";\nimport { camelize, defineComponent, h, onMounted, onUnmounted } from \"vue\";\nimport { keys } from \"vuepress-shared/client\";\n\nimport type { ArtPlayerOptions } from \"../../shared/index.js\";\nimport { useSize } from \"../composables/index.js\";\nimport {\n  SUPPORTED_VIDEO_TYPES,\n  getTypeByUrl,\n  registerMseDash,\n  registerMseFlv,\n  registerMseHls,\n} from \"../utils/mse.js\";\n\nimport \"../styles/art-player.scss\";\n\nconst BOOLEAN_TRUE_ATTRS = [\n  \"no-fullscreen\",\n  \"no-hotkey\",\n  \"no-playback-rate\",\n  \"no-setting\",\n  \"no-mutex\",\n  \"no-plays-inline\",\n] as const;\n\nconst BOOLEAN_FALSE_ATTRS = [\n  \"airplay\",\n  \"autoplay\",\n  \"aspect-ratio\",\n  \"auto-mini\",\n  \"auto-size\",\n  \"auto-orientation\",\n  \"auto-playback\",\n  \"fast-forward\",\n  \"flip\",\n  \"fullscreen-web\",\n  \"lock\",\n  \"loop\",\n  \"is-live\",\n  \"muted\",\n  \"mini-progress-bar\",\n  \"pip\",\n  \"screenshot\",\n  \"subtitle-offset\",\n] as const;\n\n// NOTE: This should be updated with https://github.com/zhw2590582/ArtPlayer/blob/master/packages/artplayer/src/i18n/index.js\nconst SUPPORTED_LANG_NAME = [\"en\", \"pl\", \"cs\", \"es\", \"fa\", \"fr\", \"id\", \"ru\"];\nconst SUPPORTED_LANG_CODE = [\"zh-cn\", \"zh-tw\"];\n\ntype KebabCaseToCamelCase<\n  S extends string,\n  Cap extends boolean = false\n> = S extends `${infer Head}-${infer Tail}`\n  ? `${Cap extends true ? Capitalize<Head> : Head}${KebabCaseToCamelCase<\n      Tail,\n      true\n    >}`\n  : Cap extends true\n  ? Capitalize<S>\n  : S;\n\ntype ArtPlayerBooleanOptionKey =\n  | (typeof BOOLEAN_TRUE_ATTRS extends readonly (infer T extends string)[]\n      ? T extends `no-${infer Key}`\n        ? KebabCaseToCamelCase<Key>\n        : never\n      : never)\n  | (typeof BOOLEAN_FALSE_ATTRS extends readonly (infer T extends string)[]\n      ? KebabCaseToCamelCase<T>\n      : never);\n\ndeclare const ART_PLAYER_OPTIONS: ArtPlayerOptions;\n\nconst getLang = (lang: string): string => {\n  const langCode = lang.toLowerCase();\n  const langName = langCode.split(\"-\")[0]!;\n\n  return SUPPORTED_LANG_CODE.includes(langCode)\n    ? langCode\n    : SUPPORTED_LANG_NAME.includes(langName)\n    ? langName\n    : langName === \"zh\"\n    ? \"zh-cn\"\n    : \"en\";\n};\n\nexport default defineComponent({\n  name: \"ArtPlayer\",\n\n  props: {\n    /**\n     * Video Source URL\n     *\n     * 视频源文件地址\n     */\n    src: {\n      type: String,\n      required: true,\n    },\n\n    /**\n     * Video Type\n     *\n     * 视频类型\n     */\n    type: {\n      type: String,\n      default: \"\",\n    },\n\n    /**\n     * Video poster\n     *\n     * 视频封面\n     */\n    poster: {\n      type: String,\n      default: \"\",\n    },\n\n    /**\n     * Video title\n     *\n     * 视频标题\n     */\n    title: {\n      type: String,\n      default: \"\",\n    },\n\n    /**\n     * Component width\n     *\n     * 组件宽度\n     */\n    width: {\n      type: [String, Number],\n      default: \"100%\",\n    },\n\n    /**\n     * Component height\n     *\n     * 组件高度\n     */\n    height: {\n      type: [String, Number],\n      default: undefined,\n    },\n\n    /**\n     * Component width / height ratio\n     *\n     * 组件长宽比\n     */\n    ratio: {\n      type: [String, Number],\n      default: 16 / 9,\n    },\n\n    /**\n     * ArtPlayer config\n     *\n     * ArtPlayer 配置\n     */\n    config: {\n      type: Object as PropType<Omit<ArtPlayerOptions, \"container\">>,\n      default: null,\n    },\n\n    /**\n     * Customize Artplayer\n     *\n     * 对 Artplayer 进行自定义\n     */\n    customPlayer: {\n      type: Function as PropType<\n        (\n          player: Artplayer\n        ) => Artplayer | void | Promise<Artplayer> | Promise<void>\n      >,\n\n      default: (player: Artplayer) => player,\n    },\n  },\n\n  setup(props, { attrs }) {\n    const lang = usePageLang();\n    const { el, width, height } = useSize<HTMLDivElement>(props, 0);\n\n    let artPlayerInstance: Artplayer;\n\n    const getInitOptions = (): ArtPlayerInitOptions => {\n      const initOptions: ArtPlayerInitOptions = {\n        theme: \"#3eaf7c\",\n        ...ART_PLAYER_OPTIONS,\n        container: el.value!,\n        poster: props.poster,\n        url: props.src,\n        type: props.type || getTypeByUrl(props.src),\n        lang: getLang(lang.value),\n        ...props.config,\n        // this option must be set false to avoid problems\n        useSSR: false,\n      };\n\n      const attrsKeys = keys(attrs);\n\n      BOOLEAN_TRUE_ATTRS.forEach((config) => {\n        if (attrsKeys.includes(config))\n          initOptions[\n            <ArtPlayerBooleanOptionKey>camelize(config.replace(/^no-/, \"\"))\n          ] = false;\n      });\n      BOOLEAN_FALSE_ATTRS.forEach((config) => {\n        if (attrsKeys.includes(config))\n          initOptions[<ArtPlayerBooleanOptionKey>camelize(config)] = true;\n      });\n\n      // auto config mse\n      if (initOptions.type) {\n        const customType = (initOptions.customType ??= {});\n\n        if (SUPPORTED_VIDEO_TYPES.includes(initOptions.type.toLowerCase()))\n          switch (initOptions.type) {\n            case \"m3u8\":\n            case \"hls\":\n              customType[initOptions.type] ??= (\n                video: HTMLVideoElement,\n                src: string,\n                player: Artplayer\n              ): Promise<void> =>\n                registerMseHls(video, src, (destroy) => {\n                  player.on(\"destroy\", destroy);\n                });\n              break;\n\n            case \"flv\":\n              customType[initOptions.type] ??= (\n                video: HTMLVideoElement,\n                src: string,\n                player: Artplayer\n              ): Promise<void> =>\n                registerMseFlv(video, src, (destroy) => {\n                  player.on(\"destroy\", destroy);\n                });\n              break;\n\n            case \"mpd\":\n            case \"dash\":\n              customType[initOptions.type] ??= (\n                video: HTMLVideoElement,\n                src: string,\n                player: Artplayer\n              ): Promise<void> =>\n                registerMseDash(video, src, (destroy) => {\n                  player.on(\"destroy\", destroy);\n                });\n              break;\n          }\n        else\n          console.warn(\n            `[components]: ArtPlayer does not support current file type ${initOptions.type}!`\n          );\n      }\n\n      return initOptions;\n    };\n\n    // FIXME: Related issue https://github.com/zhw2590582/ArtPlayer/issues/450\n    onMounted(async () => {\n      const { default: Artplayer } = await import(\n        /* webpackChunkName: \"artplayer\" */ \"artplayer\"\n      );\n      const player = new Artplayer(getInitOptions());\n\n      artPlayerInstance = (await props.customPlayer(player)) || player;\n    });\n\n    onUnmounted(() => {\n      artPlayerInstance?.destroy();\n    });\n\n    return (): VNode =>\n      h(\n        \"div\",\n        {\n          ref: el,\n          class: \"vp-artplayer\",\n          style: {\n            width: width.value,\n            height: height.value,\n          },\n        },\n        \"Loading...\"\n      );\n  },\n});\n"],"names":["SUPPORTED_VIDEO_TYPES","getTypeByUrl","url","registerMseDash","mediaElement","src","registerDestroy","autoPlay","startTime","dashjs","dashPlayer","registerMseFlv","mpegts","flvPlayer","registerMseHls","hls","hlsInstance","BOOLEAN_TRUE_ATTRS","BOOLEAN_FALSE_ATTRS","SUPPORTED_LANG_NAME","SUPPORTED_LANG_CODE","getLang","lang","langCode","langName","ArtPlayer","defineComponent","player","props","attrs","usePageLang","el","width","height","useSize","artPlayerInstance","getInitOptions","initOptions","attrsKeys","keys","config","camelize","customType","video","destroy","onMounted","Artplayer","onUnmounted","h"],"mappings":"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"}