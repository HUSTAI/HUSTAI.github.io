import type { CommentData } from '../../types/artalk-data';
import type Context from '../../types/context';
import Component from '../lib/component';
import { EditorUI } from './ui';
import { PlugManager } from './plug-manager';
import { Mover } from './mover';
import { ReplyManager } from './reply';
import { EditModeManager } from './edit-mode';
import { SubmitManager } from './submit';
export default class Editor extends Component {
    /** 界面 */
    private ui;
    getUI(): EditorUI;
    /** 插件管理器 */
    private plugs?;
    getPlugs(): PlugManager | undefined;
    setPlugs(p: PlugManager): void;
    /** 评论框移动 */
    private mover?;
    setMover(m: Mover): void;
    /** 回复评论 */
    private reply?;
    setReplyManager(m: ReplyManager): void;
    getReplyManager(): ReplyManager | undefined;
    get isReplyMode(): boolean;
    /** 编辑评论 */
    private editMode?;
    setEditModeManager(m: EditModeManager): void;
    get isEditMode(): boolean;
    /** 提交评论 */
    private submitManager?;
    setSubmitManager(m: SubmitManager): void;
    getSubmitManager(): SubmitManager | undefined;
    constructor(ctx: Context);
    getHeaderInputEls(): {
        nick: HTMLInputElement;
        email: HTMLInputElement;
        link: HTMLInputElement;
    };
    saveToLocalStorage(): void;
    refreshSendBtnText(): void;
    /** 最终用于 submit 的数据 */
    getFinalContent(): string;
    getContentOriginal(): string;
    getContentMarked(): string;
    setContent(val: string): void;
    insertContent(val: string): void;
    adjustTextareaHeight(): void;
    focus(): void;
    reset(): void;
    /** 设置回复评论 */
    setReply(commentData: CommentData, $comment: HTMLElement, scroll?: boolean): void;
    /** 取消回复评论 */
    cancelReply(): void;
    /** 设置编辑评论 */
    setEditComment(commentData: CommentData, $comment: HTMLElement): void;
    /** 取消编辑评论 */
    cancelEditComment(): void;
    showNotify(msg: string, type: "i" | "s" | "w" | "e"): void;
    showLoading(): void;
    hideLoading(): void;
    /** 点击评论提交按钮事件 */
    submit(): Promise<void>;
    /** 关闭评论 */
    close(): void;
    /** 打开评论 */
    open(): void;
    /** 移动评论框到置顶元素之后 */
    travel($afterEl: HTMLElement): void;
    /** 评论框归位 */
    travelBack(): void;
    /** 展开插件面板 */
    openPlugPanel(plugName: string): void;
    /** 收起插件面板 */
    closePlugPanel(): void;
}
