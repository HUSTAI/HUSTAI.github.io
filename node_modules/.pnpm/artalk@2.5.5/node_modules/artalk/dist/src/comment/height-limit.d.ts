export interface IHeightLimitConf {
    /** Post expand btn click */
    postExpandBtnClick?: (e: MouseEvent) => void;
    /** Allow Scroll */
    scrollable?: boolean;
}
export interface IHeightLimitRule {
    /** Target element need to check */
    el: HTMLElement | null | undefined;
    /** Max height (unit: px) */
    max: number;
    /** Whether or not the element contains `<img />` */
    imgContains?: boolean;
}
export type THeightLimitRuleSet = IHeightLimitRule[];
/** Check all elements below the max height limit */
export declare function check(conf: IHeightLimitConf, rules: THeightLimitRuleSet): void;
/** Apply height limit on an element and add expand btn */
export declare function applyHeightLimit(obj: {
    el: HTMLElement;
    maxHeight: number;
    postBtnClick?: (e: MouseEvent) => void;
}): void;
/** Dispose height limit on an element and remove expand btn */
export declare function disposeHeightLimit($el: HTMLElement): void;
/** Apply scrollable height limit */
export declare function applyScrollableHeightLimit(obj: {
    el: HTMLElement;
    maxHeight: number;
}): void;
