import { menuContext } from './chunk-HSL7QSWM.js';
import { TooltipController } from './chunk-76RGKOLX.js';
import { FocusVisibleController } from './chunk-DDO45JSG.js';
import { useContext, effect } from 'maverick.js';
import { defineElement, Component } from 'maverick.js/element';

var MenuButton = class extends Component {
  constructor(instance) {
    super(instance);
    this.A = useContext(menuContext);
    new FocusVisibleController(instance);
    new TooltipController(instance);
  }
  onAttach(el) {
    this.A.Wc(el);
    effect(this.yc.bind(this));
  }
  onConnect(el) {
    const hint = Array.from(el.querySelectorAll('[slot="hint"]')).pop();
    if (hint) {
      effect(() => {
        const text = this.A.lb();
        if (text)
          hint.textContent = text;
      });
    }
  }
  yc() {
    this.A.Zc(this.$props.disabled());
  }
};
MenuButton.el = defineElement({
  tagName: "media-menu-button",
  props: { disabled: false }
});

export { MenuButton };
