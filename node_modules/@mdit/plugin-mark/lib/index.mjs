const a=(t,k)=>{const n=t.pos,s=t.src.charAt(n);if(k||s!=="=")return!1;const r=t.scanDelims(t.pos,!0);let{length:o}=r;if(o<2)return!1;let e;o%2&&(e=t.push("text","",0),e.content=s,o-=1);for(let c=0;c<o;c+=2)e=t.push("text","",0),e.content=`${s}${s}`,(r.can_open||r.can_close)&&t.delimiters.push({marker:61,length:0,jump:c/2,token:t.tokens.length-1,end:-1,open:r.can_open,close:r.can_close});return t.pos+=r.length,!0},l=(t,k)=>{let n;const s=[],r=k.length;for(let o=0;o<r;o++){const e=k[o];if(e.marker===61&&e.end!==-1){const c=k[e.end];n=t.tokens[e.token],n.type="mark_open",n.tag="mark",n.nesting=1,n.markup="==",n.content="",n=t.tokens[c.token],n.type="mark_close",n.tag="mark",n.nesting=-1,n.markup="==",n.content="",t.tokens[c.token-1].type==="text"&&t.tokens[c.token-1].content==="="&&s.push(c.token-1)}}for(;s.length;){const o=s.pop();let e=o+1;for(;e<t.tokens.length&&t.tokens[e].type==="mark_close";)e+=1;e-=1,o!==e&&(n=t.tokens[e],t.tokens[e]=t.tokens[o],t.tokens[o]=n)}},i=t=>{t.inline.ruler.before("emphasis","mark",a),t.inline.ruler2.before("emphasis","mark",k=>{const n=k.tokens_meta||[];l(k,k.delimiters);for(let s=0;s<n.length;s++){const r=n[s];r!=null&&r.delimiters&&l(k,r.delimiters)}return!0})};export{i as mark};
//# sourceMappingURL=index.mjs.map
