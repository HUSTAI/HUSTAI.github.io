import{createRequire as d}from"node:module";import{tex as k}from"@mdit/plugin-tex";import c from"katex";const n=r=>r.replace(/&/gu,"&amp;").replace(/</gu,"&lt;").replace(/>/gu,"&gt;").replace(/"/gu,"&quot;").replace(/'/gu,"&#039;"),x=d(import.meta.url),w=(r,e)=>{try{return c.renderToString(r,{...e,displayMode:!1})}catch(t){return e.throwOnError&&console.warn(t),`<span class='katex-error' title='${n(t.toString())}'>${n(r)}</span>`}},y=(r,e)=>{try{return`<p class='katex-block'>${c.renderToString(r,{...e,displayMode:!0})}</p>
`}catch(t){return e.throwOnError&&console.warn(t),`<p class='katex-block katex-error' title='${n(t.toString())}'>${n(r)}</p>
`}},$=(r,e={})=>{const{mathFence:t=!1,mhchem:l=!1,logger:p=o=>o==="newLineInDisplayMode"?"ignore":"warn",...s}=e;l&&x("katex/contrib/mhchem"),r.use(k,{mathFence:t,render:(o,i,m)=>{const a={strict:(u,g,h)=>p(u,g,h,m)??"ignore",throwOnError:!1,...s};return i?y(o,a):w(o,a)}})};export{$ as katex};
//# sourceMappingURL=index.mjs.map
