"use strict";var m=require("node:module"),x=require("@mdit/plugin-tex"),a=require("katex");const c=e=>e.replace(/&/gu,"&amp;").replace(/</gu,"&lt;").replace(/>/gu,"&gt;").replace(/"/gu,"&quot;").replace(/'/gu,"&#039;"),k=m.createRequire(typeof document>"u"?require("url").pathToFileURL(__filename).href:document.currentScript&&document.currentScript.src||new URL("index.cjs",document.baseURI).href),w=(e,r)=>{try{return a.renderToString(e,{...r,displayMode:!1})}catch(t){return r.throwOnError&&console.warn(t),`<span class='katex-error' title='${c(t.toString())}'>${c(e)}</span>`}},f=(e,r)=>{try{return`<p class='katex-block'>${a.renderToString(e,{...r,displayMode:!0})}</p>
`}catch(t){return r.throwOnError&&console.warn(t),`<p class='katex-block katex-error' title='${c(t.toString())}'>${c(e)}</p>
`}},q=(e,r={})=>{const{mathFence:t=!1,mhchem:i=!1,logger:u=n=>n==="newLineInDisplayMode"?"ignore":"warn",...s}=r;i&&k("katex/contrib/mhchem"),e.use(x.tex,{mathFence:t,render:(n,l,p)=>{const o={strict:(d,g,h)=>u(d,g,h,p)??"ignore",throwOnError:!1,...s};return l?f(n,o):w(n,o)}})};exports.katex=q;
//# sourceMappingURL=index.cjs.map
